<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Vic&#39;s Blog</title>
  
  <subtitle>code changes the world</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-19T06:35:47.754Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>vic</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/05/19/hello-world/"/>
    <id>http://yoursite.com/2020/05/19/hello-world/</id>
    <published>2020-05-19T06:35:47.754Z</published>
    <updated>2020-05-19T06:35:47.754Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>如何用Docker部署Spring Boot项目</title>
    <link href="http://yoursite.com/2019/12/15/%E5%A6%82%E4%BD%95%E7%94%A8Docker%E9%83%A8%E7%BD%B2Spring%20Boot%E9%A1%B9%E7%9B%AE/"/>
    <id>http://yoursite.com/2019/12/15/%E5%A6%82%E4%BD%95%E7%94%A8Docker%E9%83%A8%E7%BD%B2Spring%20Boot%E9%A1%B9%E7%9B%AE/</id>
    <published>2019-12-15T12:36:00.000Z</published>
    <updated>2020-05-19T07:07:32.071Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-idea中安装docker插件；"><a href="#1-idea中安装docker插件；" class="headerlink" title="1.idea中安装docker插件；"></a>1.idea中安装docker插件；</h4><h4 id="2-新建DockerFile，内容如下。"><a href="#2-新建DockerFile，内容如下。" class="headerlink" title="2.新建DockerFile，内容如下。"></a>2.新建DockerFile，内容如下。</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 基础镜像使用java</span><br><span class="line">FROM java:8</span><br><span class="line"># 作者</span><br><span class="line">MAINTAINER vic <span class="tag">&lt;<span class="name">test@163.com</span>&gt;</span></span><br><span class="line"># VOLUME 指定了临时文件目录为/tmp。</span><br><span class="line"># 其效果是在主机 /var/lib/docker 目录下创建了一个临时文件，并链接到容器的/tmp</span><br><span class="line">VOLUME /tmp</span><br><span class="line"># 将jar包添加到容器中并更名为app.jar</span><br><span class="line">ADD es-1.0.0-SNAPSHOT.jar app.jar</span><br><span class="line"># 运行jar包</span><br><span class="line">RUN bash -c 'touch /app.jar'</span><br><span class="line">ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]</span><br></pre></td></tr></table></figure><h4 id="3-将es-1-0-0-SNAPSHOT-jar以及DockerFile放到一个目录中，执行命令，生成docker镜像。"><a href="#3-将es-1-0-0-SNAPSHOT-jar以及DockerFile放到一个目录中，执行命令，生成docker镜像。" class="headerlink" title="3.将es-1.0.0-SNAPSHOT.jar以及DockerFile放到一个目录中，执行命令，生成docker镜像。"></a>3.将es-1.0.0-SNAPSHOT.jar以及DockerFile放到一个目录中，执行命令，生成docker镜像。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t es:1.0.0 -f DockerFile .</span><br></pre></td></tr></table></figure><h4 id="4-查看当前的镜像-docker-images，并运行镜像，启动容器。"><a href="#4-查看当前的镜像-docker-images，并运行镜像，启动容器。" class="headerlink" title="4.查看当前的镜像 docker images，并运行镜像，启动容器。"></a>4.查看当前的镜像 docker images，并运行镜像，启动容器。</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8081:8081 es:1.0.0</span><br></pre></td></tr></table></figure><h4 id="5-若想进入当前的容器"><a href="#5-若想进入当前的容器" class="headerlink" title="5.若想进入当前的容器"></a>5.若想进入当前的容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it containerId /bin/bash</span><br></pre></td></tr></table></figure><h4 id="6-查看开放的端口"><a href="#6-查看开放的端口" class="headerlink" title="6.查看开放的端口"></a>6.查看开放的端口</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ntpl</span><br></pre></td></tr></table></figure><h4 id="7-查看spring-boot应用的日志"><a href="#7-查看spring-boot应用的日志" class="headerlink" title="7.查看spring boot应用的日志"></a>7.查看spring boot应用的日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f --tail=1000 containerId</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-idea中安装docker插件；&quot;&gt;&lt;a href=&quot;#1-idea中安装docker插件；&quot; class=&quot;headerlink&quot; title=&quot;1.idea中安装docker插件；&quot;&gt;&lt;/a&gt;1.idea中安装docker插件；&lt;/h4&gt;&lt;h4 id=&quot;2-新建DockerFile，内容如下。&quot;&gt;&lt;a href=&quot;#2-新建DockerFile，内容如下。&quot; class=&quot;headerlink&quot; title=&quot;2.新建DockerFile，内容如下。&quot;&gt;&lt;/a&gt;2.新建DockerFile，内容如下。&lt;/h4&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 基础镜像使用java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FROM java:8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 作者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MAINTAINER vic &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;test@163.com&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# VOLUME 指定了临时文件目录为/tmp。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 其效果是在主机 /var/lib/docker 目录下创建了一个临时文件，并链接到容器的/tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;VOLUME /tmp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 将jar包添加到容器中并更名为app.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ADD es-1.0.0-SNAPSHOT.jar app.jar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 运行jar包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RUN bash -c &#39;touch /app.jar&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ENTRYPOINT [&quot;java&quot;,&quot;-Djava.security.egd=file:/dev/./urandom&quot;,&quot;-jar&quot;,&quot;/app.jar&quot;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;3-将es-1-0-0-SNAPSHOT-jar以及DockerFile放到一个目录中，执行命令，生成docker镜像。&quot;&gt;&lt;a href=&quot;#3-将es-1-0-0-SNAPSHOT-jar以及DockerFile放到一个目录中，执行命令，生成docker镜像。&quot; class=&quot;headerlink&quot; title=&quot;3.将es-1.0.0-SNAPSHOT.jar以及DockerFile放到一个目录中，执行命令，生成docker镜像。&quot;&gt;&lt;/a&gt;3.将es-1.0.0-SNAPSHOT.jar以及DockerFile放到一个目录中，执行命令，生成docker镜像。&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker build -t es:1.0.0 -f DockerFile .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;4-查看当前的镜像-docker-images，并运行镜像，启动容器。&quot;&gt;&lt;a href=&quot;#4-查看当前的镜像-docker-images，并运行镜像，启动容器。&quot; class=&quot;headerlink&quot; title=&quot;4.查看当前的镜像 docker images，并运行镜像，启动容器。&quot;&gt;&lt;/a&gt;4.查看当前的镜像 docker images，并运行镜像，启动容器。&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker run -d -p 8081:8081 es:1.0.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Devops" scheme="http://yoursite.com/categories/Devops/"/>
    
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>基于Prometheus+Grafana+AlertManager的监控系统</title>
    <link href="http://yoursite.com/2019/12/10/%E5%9F%BA%E4%BA%8EPrometheus+Grafana+AlertManager%E7%9A%84%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2019/12/10/%E5%9F%BA%E4%BA%8EPrometheus+Grafana+AlertManager%E7%9A%84%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/</id>
    <published>2019-12-10T08:42:00.000Z</published>
    <updated>2020-05-19T07:07:31.901Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Prometheus"><a href="#一、Prometheus" class="headerlink" title="一、Prometheus"></a>一、Prometheus</h2><h3 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h3><p>Prometheus是一套开源的监控&amp;报警&amp;时间序列数据库的组合，基于应用的metrics来进行监控的开源工具 。</p><p><img src="https://i.loli.net/2020/04/14/mtwk9IKuJXQDAb4.png" alt="prometheus.png"></p><h3 id="1-2-下载-amp-安装"><a href="#1-2-下载-amp-安装" class="headerlink" title="1.2 下载&amp;安装"></a>1.2 下载&amp;安装</h3><ul><li><p>下载地址：<a href="https://prometheus.io/download/" target="_blank" rel="noopener">https://prometheus.io/download/</a></p></li><li><p>解压：tar zxvf prometheus-2.12.0.linux-amd64.tar.gz</p></li><li><p>编辑： prometheus.yml，其中包括全局、alertmanager、告警规则、监控job配置，具体内容如下。</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># my global config</span><br><span class="line">global:</span><br><span class="line">  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.</span><br><span class="line">  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.</span><br><span class="line">  # scrape_timeout is set to the global default (10s).</span><br><span class="line"></span><br><span class="line"># Alertmanager configuration</span><br><span class="line">alerting:</span><br><span class="line">  alertmanagers:</span><br><span class="line">  - static_configs:</span><br><span class="line">    - targets:</span><br><span class="line">       - 192.168.88.69:9093</span><br><span class="line"></span><br><span class="line"># Load rules once and periodically evaluate them according to the global 'evaluation_interval'.</span><br><span class="line">rule_files:</span><br><span class="line">   - "test_rules.yml"</span><br><span class="line">  # - "second_rules.yml"</span><br><span class="line"></span><br><span class="line"># A scrape configuration containing exactly one endpoint to scrape:</span><br><span class="line"># Here it's Prometheus itself.</span><br><span class="line">scrape_configs:</span><br><span class="line">  # The job name is added as a label `job=<span class="tag">&lt;<span class="name">job_name</span>&gt;</span>` to any timeseries scraped from this config.</span><br><span class="line">  - job_name: 'prometheus'</span><br><span class="line"></span><br><span class="line">    # metrics_path defaults to '/metrics'</span><br><span class="line">    # scheme defaults to 'http'.</span><br><span class="line"></span><br><span class="line">    static_configs:</span><br><span class="line">    - targets: ['192.168.88.69:9090']</span><br><span class="line"></span><br><span class="line">  - job_name: 'monitor'</span><br><span class="line">    scrape_interval: 5s</span><br><span class="line">    metrics_path: '/actuator/prometheus'</span><br><span class="line">    static_configs:</span><br><span class="line">    - targets: ['192.168.88.69:8008']</span><br><span class="line"></span><br><span class="line">  - job_name: 'node-exporter'</span><br><span class="line">    static_configs:</span><br><span class="line">    - targets: ['192.168.88.69:9100']</span><br></pre></td></tr></table></figure><ul><li><p>启动：./prometheus &amp;</p></li><li><p>验证安装：访问地址：<a href="http://192.168.88.69:9090/targets" target="_blank" rel="noopener">http://192.168.88.69:9090/targets</a></p></li></ul><h3 id="1-3-Spring-Boot集成Prometheus"><a href="#1-3-Spring-Boot集成Prometheus" class="headerlink" title="1.3 Spring Boot集成Prometheus"></a>1.3 Spring Boot集成Prometheus</h3><h4 id="1-3-1-配置pom文件"><a href="#1-3-1-配置pom文件" class="headerlink" title="1.3.1 配置pom文件"></a>1.3.1 配置pom文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--监控--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.micrometer<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>micrometer-registry-prometheus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-3-2-配置yml"><a href="#1-3-2-配置yml" class="headerlink" title="1.3.2 配置yml"></a>1.3.2 配置yml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8008</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">monitor</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">'*'</span></span><br><span class="line">  <span class="attr">metrics:</span></span><br><span class="line">    <span class="attr">tags:</span></span><br><span class="line">     <span class="attr">application:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br></pre></td></tr></table></figure><h4 id="1-3-3-添加配置类"><a href="#1-3-3-添加配置类" class="headerlink" title="1.3.3 添加配置类"></a>1.3.3 添加配置类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MeterRegistryConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function">MeterRegistryCustomizer&lt;MeterRegistry&gt; <span class="title">configurer</span><span class="params">(@Value(<span class="string">"$&#123;spring.application.name&#125;"</span>)</span> String applicationName) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (registry) -&gt; registry.config().commonTags(<span class="string">"application"</span>, applicationName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、AlertManager"><a href="#二、AlertManager" class="headerlink" title="二、AlertManager"></a>二、AlertManager</h2><h3 id="2-1简介"><a href="#2-1简介" class="headerlink" title="2.1简介"></a>2.1简介</h3><p>Alertmanager 对收到的告警信息进行处理，包括去重，降噪，分组，策略路由告警通知。</p><h3 id="2-2-配置"><a href="#2-2-配置" class="headerlink" title="2.2 配置"></a>2.2 配置</h3><p>修改alertmanager.yml，当前配置的是邮箱告警，当然还支持企业微信、钉钉等，内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">global:</span></span><br><span class="line">  <span class="attr">resolve_timeout:</span> <span class="string">5m</span></span><br><span class="line">  <span class="attr">smtp_smarthost:</span> <span class="string">'smtp.mxhichina.com:25'</span>       <span class="comment"># smtp地址</span></span><br><span class="line">  <span class="attr">smtp_from:</span> <span class="string">'test@163.com'</span>                   <span class="comment"># 发送邮箱地址</span></span><br><span class="line">  <span class="attr">smtp_auth_username:</span> <span class="string">'test@163.com'</span>          <span class="comment"># 邮箱用户</span></span><br><span class="line">  <span class="attr">smtp_auth_password:</span> <span class="string">'123456'</span>            <span class="comment"># 邮箱密码</span></span><br><span class="line"></span><br><span class="line"><span class="attr">route:</span></span><br><span class="line">  <span class="attr">group_by:</span> <span class="string">["instance"]</span>                       <span class="comment"># 分组名</span></span><br><span class="line">  <span class="attr">group_wait:</span> <span class="string">10s</span>                              <span class="comment"># 当收到告警的时候，等待十秒看是否还有告警，如果有就一起发出去</span></span><br><span class="line">  <span class="attr">igroup_interval:</span> <span class="string">10s</span>                          <span class="comment"># 发送警告间隔时间</span></span><br><span class="line">  <span class="attr">repeat_interval:</span> <span class="string">1h</span>                          <span class="comment"># 重复报警的间隔时间</span></span><br><span class="line">  <span class="attr">receiver:</span> <span class="string">mail</span>                               <span class="comment"># 全局报警组，这个参数是必选的，和下面报警组名要相同</span></span><br><span class="line"></span><br><span class="line"><span class="attr">receivers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">'mail'</span>                                 <span class="comment"># 报警组名</span></span><br><span class="line">  <span class="attr">email_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">to:</span> <span class="string">'receiver@163.com'</span>                     <span class="comment"># 收件人邮箱</span></span><br><span class="line">    <span class="attr">headers:</span> <span class="string">&#123;Subject:</span> <span class="string">"告警测试邮件"</span><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-启动"><a href="#2-3-启动" class="headerlink" title="2.3 启动"></a>2.3 启动</h3><p>命令：./alertmanager &amp; ，端口号：9093</p><h2 id="三、Grafana"><a href="#三、Grafana" class="headerlink" title="三、Grafana"></a>三、Grafana</h2><h3 id="3-1-简介"><a href="#3-1-简介" class="headerlink" title="3.1 简介"></a>3.1 简介</h3><p>Grafana是一款用Go语言开发的开源数据可视化工具，可以做数据监控和数据统计，带有告警功能。</p><h3 id="3-2-配置"><a href="#3-2-配置" class="headerlink" title="3.2 配置"></a>3.2 配置</h3><ol><li><p>解压grafana-6.3.5.linux-amd64.tar.gz，启动 ./grafana-server &amp;，访问地址<a href="http://192.168.88.69:3000" target="_blank" rel="noopener">http://192.168.88.69:3000</a></p></li><li><p>配置Data Sources<br><img src="https://i.loli.net/2020/04/14/DWgph3xRa9qlbnO.png" alt="Kafana.png"></p></li><li><p>安装exporter，如要监控服务器的运行状态，需要安装node_exporter，并启动项目，端口号：9100，并在prometheus里配置节点，并重启prometheus。</p></li><li><p>导入模板，可以在Grafana官网找下，地址：<a href="https://grafana.com/grafana/dashboards" target="_blank" rel="noopener">https://grafana.com/grafana/dashboards</a>。</p></li></ol><p><img src="https://i.loli.net/2020/04/14/Bqtx8STm4lsYyp5.png" alt="node_exporter.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、Prometheus&quot;&gt;&lt;a href=&quot;#一、Prometheus&quot; class=&quot;headerlink&quot; title=&quot;一、Prometheus&quot;&gt;&lt;/a&gt;一、Prometheus&lt;/h2&gt;&lt;h3 id=&quot;1-1-简介&quot;&gt;&lt;a href=&quot;#1-1-简介&quot; class=&quot;headerlink&quot; title=&quot;1.1 简介&quot;&gt;&lt;/a&gt;1.1 简介&lt;/h3&gt;&lt;p&gt;Prometheus是一套开源的监控&amp;amp;报警&amp;amp;时间序列数据库的组合，基于应用的metrics来进行监控的开源工具 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/14/mtwk9IKuJXQDAb4.png&quot; alt=&quot;prometheus.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-2-下载-amp-安装&quot;&gt;&lt;a href=&quot;#1-2-下载-amp-安装&quot; class=&quot;headerlink&quot; title=&quot;1.2 下载&amp;amp;安装&quot;&gt;&lt;/a&gt;1.2 下载&amp;amp;安装&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载地址：&lt;a href=&quot;https://prometheus.io/download/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://prometheus.io/download/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压：tar zxvf prometheus-2.12.0.linux-amd64.tar.gz&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编辑： prometheus.yml，其中包括全局、alertmanager、告警规则、监控job配置，具体内容如下。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# my global config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;global:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # scrape_timeout is set to the global default (10s).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Alertmanager configuration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alerting:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  alertmanagers:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - static_configs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - targets:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       - 192.168.88.69:9093&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Load rules once and periodically evaluate them according to the global &#39;evaluation_interval&#39;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rule_files:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   - &quot;test_rules.yml&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # - &quot;second_rules.yml&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# A scrape configuration containing exactly one endpoint to scrape:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Here it&#39;s Prometheus itself.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrape_configs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # The job name is added as a label `job=&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;job_name&lt;/span&gt;&amp;gt;&lt;/span&gt;` to any timeseries scraped from this config.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - job_name: &#39;prometheus&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # metrics_path defaults to &#39;/metrics&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # scheme defaults to &#39;http&#39;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static_configs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - targets: [&#39;192.168.88.69:9090&#39;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - job_name: &#39;monitor&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scrape_interval: 5s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    metrics_path: &#39;/actuator/prometheus&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static_configs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - targets: [&#39;192.168.88.69:8008&#39;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - job_name: &#39;node-exporter&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static_configs:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - targets: [&#39;192.168.88.69:9100&#39;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Devops" scheme="http://yoursite.com/categories/Devops/"/>
    
    
      <category term="prometheus" scheme="http://yoursite.com/tags/prometheus/"/>
    
      <category term="grafana" scheme="http://yoursite.com/tags/grafana/"/>
    
      <category term="alertmanager" scheme="http://yoursite.com/tags/alertmanager/"/>
    
  </entry>
  
  <entry>
    <title>日志收集系统ELK搭建</title>
    <link href="http://yoursite.com/2019/11/27/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E7%B3%BB%E7%BB%9FELK%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2019/11/27/%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E7%B3%BB%E7%BB%9FELK%E6%90%AD%E5%BB%BA/</id>
    <published>2019-11-27T06:46:00.000Z</published>
    <updated>2020-05-19T07:07:32.109Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、ELK简介"><a href="#一、ELK简介" class="headerlink" title="一、ELK简介"></a>一、ELK简介</h2><p>&nbsp; &nbsp; 在传统项目中，如果在生产环境中，有多台不同的服务器集群，如果生产环境需要通过日志定位项目的Bug的话，需要在每台节点上使用传统的命令方式查询，这样效率非常低下。因此我们需要集中化的管理日志，ELK则应运而生。ELK=ElasticSeach+Logstash+Kibana，日志收集原理如下所示。</p><p>1、每台服务器集群节点安装Logstash日志收集系统插件</p><p>2、每台服务器节点将日志输入到Logstash中</p><p>3、Logstash将该日志格式化为json格式，根据每天创建不同的索引，输出到ElasticSearch中</p><p>4、浏览器使用安装Kibana查询日志信息&nbsp;</p><p><img src="https://i.loli.net/2020/04/15/JMNZRE4ovp8XgDc.png" alt="ELK.png"></p><h2 id="二、Elastic-Search"><a href="#二、Elastic-Search" class="headerlink" title="二、Elastic Search"></a>二、Elastic Search</h2><h3 id="2-1-简介"><a href="#2-1-简介" class="headerlink" title="2.1 简介"></a>2.1 简介</h3><p>&nbsp; &nbsp; ElasticSearch是一个分布式搜索服务，提供的是一组Restful API，底层基于Lucene，采用多shard（分片）的方式保证数据安全，并且提供自动resharding的功能。是目前全文搜索引擎的首选，可以快速的存储、搜索和分析海量数据。</p><h3 id="2-2-安装"><a href="#2-2-安装" class="headerlink" title="2.2 安装"></a><strong>2.2 安装</strong></h3><p>&nbsp; &nbsp; 1.官网下载最新版本，地址是：<a href="https://www.elastic.co/cn/downloads/elasticsearch，下载下来的最新版本是：elasticsearch-7.4.2-linux-x86_64.tar.gz；" target="_blank" rel="noopener">https://www.elastic.co/cn/downloads/elasticsearch，下载下来的最新版本是：elasticsearch-7.4.2-linux-x86_64.tar.gz；</a></p><p>&nbsp; &nbsp; 2.解压：# tar zxvf elasticsearch-7.4.2-linux-x86_64.tar.gz</p><p>&nbsp; &nbsp; 3. # cd elasticsearch-7.4.2，配置config里的elasticsearch.yml文件，配置如下。</p><div class="cnblogs_code"><pre><span style="color: #000000;"> cluster.name: es-application node.name: es-node-1 network.host: 0.0.0.0 http.port: 9200 discovery.seed_hosts: ["192.168.1.169"] cluster.initial_master_nodes: ["es-node-1"] path.data: /var/data/es path.logs: /var/log/es</span></pre></div><p>&nbsp; &nbsp; 4.常见问题</p><p>&nbsp; &nbsp;（1）can not run elasticsearch as root</p><p>&nbsp; &nbsp; &nbsp;解决思路：为了安全不允许使用root用户启动，需要新建一个es的账户，如下所示。</p><div class="cnblogs_code"><pre><span style="color: #000000;"># adduser es# passwd es# chown -R  es elasticsearch-7.4.2 # su elasticsearch启动ES：# ./bin/elasticsearch</span></pre></div><p>&nbsp; &nbsp; （2）max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]&nbsp;</p><p>&nbsp; &nbsp; &nbsp; 解决思路：&nbsp;切换到root用户修改&nbsp; &nbsp;# vim /etc/security/limits.conf，在最后面追加下面内容，其中es 是启动ES的用户，不是root。</p><div class="cnblogs_code"><pre><span style="color: #000000;">es hard nofile 65536es soft nofile 65536</span></pre></div><p>&nbsp; &nbsp; &nbsp; （3）max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 解决思路：切换到root用户修改配置sysctl.conf</p><div class="cnblogs_code"><pre><span style="color: #000000;">#vi /etc/sysctl.conf添加下面配置：vm.max_map_count=655360并执行命令：sysctl -p</span></pre></div><h3 id="2-3-nbsp-启动"><a href="#2-3-nbsp-启动" class="headerlink" title="2.3&nbsp;启动"></a>2.3&nbsp;启动</h3><div class="cnblogs_code"><pre><span style="color: #000000;">后台启动：./elasticsearch -d停止命令：./elasticsearch -stop</span></pre></div><h3 id="2-4-验证"><a href="#2-4-验证" class="headerlink" title="2.4 验证"></a>2.4 验证</h3><p>&nbsp; &nbsp; 访问 ip:9200，成功显示如下json信息</p><p><img src="https://i.loli.net/2020/04/15/vpN2YUnGhdfOEeR.png" alt="es.png"></p><h3 id="2-5-nbsp-ES-Head"><a href="#2-5-nbsp-ES-Head" class="headerlink" title="2.5&nbsp;ES Head"></a>2.5&nbsp;ES Head</h3><p>&nbsp; &nbsp; 推荐安装chrome插件，也可以下载安装包进行安装。</p><h2 id="三、Logstash"><a href="#三、Logstash" class="headerlink" title="三、Logstash"></a>三、Logstash</h2><h3 id="3-1-简介"><a href="#3-1-简介" class="headerlink" title="3.1 简介"></a>3.1 简介</h3><p>&nbsp; &nbsp; &nbsp;Logstash 是一个完全开源的工具，它可以对你的日志进行收集、过滤、分析，支持大量的数据获取方法，并将其存储供以后使用（如搜索）。</p><h3 id="3-2-安装与配置"><a href="#3-2-安装与配置" class="headerlink" title="3.2 安装与配置"></a>3.2 安装与配置</h3><p>&nbsp; &nbsp; 1.解压logstash-7.4.2，修改logstash-7.4.2/config的logstash.conf文件；<br>&nbsp; &nbsp; 2.logstash.conf文件配置如下：</p><div class="cnblogs_code"><pre><span style="color: #000000;">input {tcp {mode =&gt; "server"host =&gt; "192.168.1.169"port =&gt; 4560codec =&gt; json_lines}}output {elasticsearch {hosts =&gt; "192.168.1.169:9200"index =&gt; "springboot-logstash-%{+YYYY.MM.dd}"}}</span></pre></div><p>&nbsp; &nbsp; 3.执行命令：# ../bin/logstash -f logstash.conf</p><h3 id="3-3-Spring-boot集成Logstash"><a href="#3-3-Spring-boot集成Logstash" class="headerlink" title="3.3 Spring boot集成Logstash"></a>3.3 Spring boot集成Logstash</h3><p>&nbsp; &nbsp; 1.pom文件里引入jar包</p><div class="cnblogs_code"><pre><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">logstash</span><span style="color: #008000;">--&gt;</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>net.logstash.logback<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>logstash-logback-encoder<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>6.2<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span></pre></div><p>&nbsp; &nbsp; 2.修改logback-spring.xml</p><div class="cnblogs_code"><pre><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">logstash地址</span><span style="color: #008000;">--&gt;</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">springProperty </span><span style="color: #ff0000;">scope</span><span style="color: #0000ff;">="context"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="LOGSTASH_ADDRESS"</span><span style="color: #ff0000;"> source</span><span style="color: #0000ff;">="logstash.address"</span><span style="color: #0000ff;">/&gt;</span><p><span style="color: #008000;">&lt;!–</span><span style="color: #008000;">输出到logstash的appender</span><span style="color: #008000;">–&gt;</span><br><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">appender </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">=”LOGSTASH”</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">=”net.logstash.logback.appender.LogstashTcpSocketAppender”</span><span style="color: #0000ff;">&gt;</span><br>    <span style="color: #008000;">&lt;!–</span><span style="color: #008000;">可以访问的logstash日志收集端口</span><span style="color: #008000;">–&gt;</span><br>    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">destination</span><span style="color: #0000ff;">&gt;</span>${LOGSTASH_ADDRESS}<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">destination</span><span style="color: #0000ff;">&gt;</span><br>    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">encoder </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">=”net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder”</span><span style="color: #0000ff;">&gt;</span><br>        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">providers</span><span style="color: #0000ff;">&gt;</span><br>            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">timestamp</span><span style="color: #0000ff;">&gt;</span><br>                <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">timeZone</span><span style="color: #0000ff;">&gt;</span>UTC<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">timeZone</span><span style="color: #0000ff;">&gt;</span><br>            <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">timestamp</span><span style="color: #0000ff;">&gt;</span><br>            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">pattern</span><span style="color: #0000ff;">&gt;</span><br>                <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">pattern</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;"><br>                    {<br>                    “app”: “java-study”,<br>                    “level”: “%-5level”,<br>                    “thread”: “%thread”,<br>                    “logger”: “%logger{50} %M %L “,<br>                    “message”: “%msg”<br>                    }<br>                </span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">pattern</span><span style="color: #0000ff;">&gt;</span><br>            <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">pattern</span><span style="color: #0000ff;">&gt;</span><br>        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">providers</span><span style="color: #0000ff;">&gt;</span><br>    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">encoder</span><span style="color: #0000ff;">&gt;</span><br><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">appender</span><span style="color: #0000ff;">&gt;</span></p><p><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">root </span><span style="color: #ff0000;">level</span><span style="color: #0000ff;">=”INFO”</span><span style="color: #0000ff;">&gt;</span><br>    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">appender-ref </span><span style="color: #ff0000;">ref</span><span style="color: #0000ff;">=”LOGSTASH”</span><span style="color: #0000ff;">/&gt;</span><br><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">root</span><span style="color: #0000ff;">&gt;</span></pre></p></div><p>&nbsp; &nbsp; 3.yml添加配置</p><div class="cnblogs_code"><pre><span style="color: #000000;">logstash:     address: 192.168.1.169:4560</span></pre></div><h2 id="四、Kibana"><a href="#四、Kibana" class="headerlink" title="四、Kibana"></a>四、Kibana</h2><h3 id="4-1-简介"><a href="#4-1-简介" class="headerlink" title="4.1 简介"></a>4.1 简介</h3><p>&nbsp; &nbsp; Kibana 是一个基于浏览器页面的Elasticsearch前端展示工具，也是一个开源和免费的工具，Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助您汇总、分析和搜索重要数据日志。</p><h3 id="4-2-安装与配置"><a href="#4-2-安装与配置" class="headerlink" title="4.2 安装与配置"></a>4.2 安装与配置</h3><p>&nbsp; &nbsp; 1.解压kibana-7.4.2-linux-x86_64.tar.gz，并修改配置文件kibana.yml&nbsp;</p><div class="cnblogs_code"><pre><span style="color: #000000;">server.port: 5601server.host: "192.168.1.169"server.name: "kibana"elasticsearch.hosts: ["http://192.168.1.169:9200"]xpack.reporting.encryptionKey: "a_random_string"xpack.security.encryptionKey: "something_at_least_32_characters"</span></pre></div><p>&nbsp; &nbsp; 2.执行命令 # ./kibana –allow-root</p><p>&nbsp; &nbsp; 3.配置日期格式</p><p><img src="https://i.loli.net/2020/04/15/zaeYq3bC1J4Ti82.png" alt="dateformat.png"></p><p>&nbsp; &nbsp; 4.create index pattern</p><p>&nbsp; &nbsp; 5.保存自定义筛选字段，供后续筛选</p><p><img src="https://i.loli.net/2020/04/15/BErYQAej7GvNgUT.png" alt="kibana.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、ELK简介&quot;&gt;&lt;a href=&quot;#一、ELK简介&quot; class=&quot;headerlink&quot; title=&quot;一、ELK简介&quot;&gt;&lt;/a&gt;一、ELK简介&lt;/h2&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; 在传统项目中，如果在生产环境中，有多台不同的服务器集群，如果生产环境需要通过日志定位项目的Bug的话，需要在每台节点上使用传统的命令方式查询，这样效率非常低下。因此我们需要集中化的管理日志，ELK则应运而生。ELK=ElasticSeach+Logstash+Kibana，日志收集原理如下所示。&lt;/p&gt;
&lt;p&gt;1、每台服务器集群节点安装Logstash日志收集系统插件&lt;/p&gt;
&lt;p&gt;2、每台服务器节点将日志输入到Logstash中&lt;/p&gt;
&lt;p&gt;3、Logstash将该日志格式化为json格式，根据每天创建不同的索引，输出到ElasticSearch中&lt;/p&gt;
&lt;p&gt;4、浏览器使用安装Kibana查询日志信息&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/15/JMNZRE4ovp8XgDc.png&quot; alt=&quot;ELK.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Devops" scheme="http://yoursite.com/categories/Devops/"/>
    
    
      <category term="ES" scheme="http://yoursite.com/tags/ES/"/>
    
      <category term="Logstash" scheme="http://yoursite.com/tags/Logstash/"/>
    
      <category term="Kibana" scheme="http://yoursite.com/tags/Kibana/"/>
    
  </entry>
  
  <entry>
    <title>Apollo环境配置</title>
    <link href="http://yoursite.com/2019/08/27/Apollo%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/08/27/Apollo%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2019-08-27T09:00:00.000Z</published>
    <updated>2020-05-19T07:07:30.549Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h2><p>&nbsp; &nbsp; Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。</p><h2 id="二、配置环境路径"><a href="#二、配置环境路径" class="headerlink" title="二、配置环境路径"></a>二、配置环境路径</h2><table><thead><tr><th>操作系统</th><th>server.properties</th><th>hosts</th></tr></thead><tbody><tr><td>windows</td><td>C:\opt\settings\server.properties</td><td>C:\Windows\System32\drivers\etc\hosts</td></tr><tr><td>linux</td><td>/opt/settings/server.properties</td><td>/etc/hosts</td></tr></tbody></table><h2 id="三、具体配置"><a href="#三、具体配置" class="headerlink" title="三、具体配置"></a>三、具体配置</h2><h4 id="3-1-nbsp-server-properties"><a href="#3-1-nbsp-server-properties" class="headerlink" title="3.1&nbsp;server.properties"></a>3.1&nbsp;server.properties</h4><p>env=DEV</p><p>目前，env持以下几个值（大小写不敏感）：</p><p>&nbsp; ● DEV</p><p>&nbsp; &nbsp; &nbsp; ○ Development environment</p><p>&nbsp; ● FAT</p><p>&nbsp; &nbsp; &nbsp; ○ Feature Acceptance Test environment</p><p>&nbsp; ● UAT</p><p>&nbsp; &nbsp; &nbsp; ○ User Acceptance Test environment</p><p>&nbsp; ● PRO</p><p>&nbsp; &nbsp; &nbsp; ○ Production environment</p><h4 id="3-2-hosts"><a href="#3-2-hosts" class="headerlink" title="3.2 hosts"></a>3.2 hosts</h4><p>192.168.1.153 dev.config.ynt.ai</p><p>192.168.1.163 fat.config.ynt.ai</p><p>192.168.1.173 uat.config.ynt.ai</p><p>192.168.1.172 pro.config.ynt.ai</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、背景&quot;&gt;&lt;a href=&quot;#一、背景&quot; class=&quot;headerlink&quot; title=&quot;一、背景&quot;&gt;&lt;/a&gt;一、背景&lt;/h2&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。&lt;/p&gt;
&lt;h2 id=&quot;二、配置环境路径&quot;&gt;&lt;a href=&quot;#二、配置环境路径&quot; class=&quot;headerlink&quot; title=&quot;二、配置环境路径&quot;&gt;&lt;/a&gt;二、配置环境路径&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作系统&lt;/th&gt;
&lt;th&gt;server.properties&lt;/th&gt;
&lt;th&gt;hosts&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;windows&lt;/td&gt;
&lt;td&gt;C:\opt\settings\server.properties&lt;/td&gt;
&lt;td&gt;C:\Windows\System32\drivers\etc\hosts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;linux&lt;/td&gt;
&lt;td&gt;/opt/settings/server.properties&lt;/td&gt;
&lt;td&gt;/etc/hosts&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;三、具体配置&quot;&gt;&lt;a href=&quot;#三、具体配置&quot; class=&quot;headerlink&quot; title=&quot;三、具体配置&quot;&gt;&lt;/a&gt;三、具体配置&lt;/h2&gt;&lt;h4 id=&quot;3-1-nbsp-server-properties&quot;&gt;&lt;a href=&quot;#3-1-nbsp-server-properties&quot; class=&quot;headerlink&quot; title=&quot;3.1&amp;nbsp;server.properties&quot;&gt;&lt;/a&gt;3.1&amp;nbsp;server.properties&lt;/h4&gt;&lt;p&gt;env=DEV&lt;/p&gt;
    
    </summary>
    
    
      <category term="配置管理" scheme="http://yoursite.com/categories/%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="Apollo" scheme="http://yoursite.com/tags/Apollo/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg的安装与使用</title>
    <link href="http://yoursite.com/2019/04/23/FFmpeg%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/04/23/FFmpeg%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</id>
    <published>2019-04-23T12:05:00.000Z</published>
    <updated>2020-05-19T07:07:30.812Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h3><p>FFmpeg是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。采用LGPL或GPL许可证。它提供了录制、转换以及流化音视频的完整解决方案。它包含了非常先进的音频/视频编解码库libavcodec，为了保证高可移植性和编解码质量，libavcodec里很多code都是从头开发的。</p><h3 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h3><h4 id="2-1-安装yasm"><a href="#2-1-安装yasm" class="headerlink" title="2.1 安装yasm"></a>2.1 安装yasm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz</span></span><br><span class="line"><span class="comment"># tar -zxvf yasm-1.3.0.tar.gz</span></span><br><span class="line"><span class="comment"># cd yasm-1.3.0</span></span><br><span class="line"><span class="comment"># ./configure</span></span><br><span class="line"><span class="comment"># make &amp;amp;&amp;amp; make install</span></span><br></pre></td></tr></table></figure><h4 id="2-2-安装FFmpeg"><a href="#2-2-安装FFmpeg" class="headerlink" title="2.2 安装FFmpeg"></a>2.2 安装FFmpeg</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#yum -y install bzip2</span></span><br><span class="line"><span class="comment">#tar jxvf ffmpeg-4.0.2.tar.bz2</span></span><br><span class="line"><span class="comment">#cd ffmpeg-4.0.2</span></span><br><span class="line"><span class="comment"># ./configure</span></span><br><span class="line"><span class="comment"># make</span></span><br><span class="line"><span class="comment"># make install</span></span><br></pre></td></tr></table></figure><h4 id="2-3-查看ffmpeg是否安装成功"><a href="#2-3-查看ffmpeg是否安装成功" class="headerlink" title="2.3 查看ffmpeg是否安装成功"></a>2.3 查看ffmpeg是否安装成功</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ffmpeg</span></span><br></pre></td></tr></table></figure><p>输入ffmpeg打印了相关信息，表示安装成功</p><h3 id="三、转换"><a href="#三、转换" class="headerlink" title="三、转换"></a>三、转换</h3><p>将MP3转换为16000的采样率、单通道的wav格式，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i G:\test.mp3 -acodec pcm_s16le -ac 1 -ar 16000 -f wav <span class="string">"G:\test.wav"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、概述&quot;&gt;&lt;a href=&quot;#一、概述&quot; class=&quot;headerlink&quot; title=&quot;一、概述&quot;&gt;&lt;/a&gt;一、概述&lt;/h3&gt;&lt;p&gt;FFmpeg是一套可以用来记录、转换数字音频、视频，并能将其转化为流的开源计算机程序。采用LGPL或GPL许可证。它提供了录制、转换以及流化音视频的完整解决方案。它包含了非常先进的音频/视频编解码库libavcodec，为了保证高可移植性和编解码质量，libavcodec里很多code都是从头开发的。&lt;/p&gt;
&lt;h3 id=&quot;二、安装&quot;&gt;&lt;a href=&quot;#二、安装&quot; class=&quot;headerlink&quot; title=&quot;二、安装&quot;&gt;&lt;/a&gt;二、安装&lt;/h3&gt;&lt;h4 id=&quot;2-1-安装yasm&quot;&gt;&lt;a href=&quot;#2-1-安装yasm&quot; class=&quot;headerlink&quot; title=&quot;2.1 安装yasm&quot;&gt;&lt;/a&gt;2.1 安装yasm&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# tar -zxvf yasm-1.3.0.tar.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# cd yasm-1.3.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ./configure&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# make &amp;amp;amp;&amp;amp;amp; make install&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;h4 id=&quot;2-2-安装FFmpeg&quot;&gt;&lt;a href=&quot;#2-2-安装FFmpeg&quot; class=&quot;headerlink&quot; title=&quot;2.2 安装FFmpeg&quot;&gt;&lt;/a&gt;2.2 安装FFmpeg&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#yum -y install bzip2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#tar jxvf ffmpeg-4.0.2.tar.bz2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#cd ffmpeg-4.0.2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ./configure&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# make&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# make install&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="FFmpeg" scheme="http://yoursite.com/tags/FFmpeg/"/>
    
  </entry>
  
  <entry>
    <title>Dubbo版本升级</title>
    <link href="http://yoursite.com/2019/04/10/Dubbo%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7/"/>
    <id>http://yoursite.com/2019/04/10/Dubbo%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7/</id>
    <published>2019-04-10T12:00:00.000Z</published>
    <updated>2020-05-19T07:07:30.748Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h2><p>早期内部使用的是当当网fork的Dubbox，由于现在Dubbo又开始重新维护，而且阿里将其捐献给了Apache，并成为了Apache的顶级项目。因此dubbo版本升级到2.7.1势在必行。</p><h2 id="二、版本升级"><a href="#二、版本升级" class="headerlink" title="二、版本升级"></a>二、版本升级</h2><p>从2.8.4升级到2.7.1</p><p>具体可以参考：</p><p>Dubbo Spring Boot (v2.7.1) :&nbsp;<a href="https://github.com/apache/incubator-dubbo-spring-boot-project" target="_blank" rel="noopener">https://github.com/apache/incubator-dubbo-spring-boot-project</a><br>Dubbo (v2.7.1) :&nbsp;<a href="https://github.com/apache/incubator-dubbo" target="_blank" rel="noopener">https://github.com/apache/incubator-dubbo</a></p><h2 id="三、遇到的问题"><a href="#三、遇到的问题" class="headerlink" title="三、遇到的问题"></a>三、遇到的问题</h2><table class="confluenceTable tablesorter tablesorter-default" style="height: 390px; width: 1000px;"><colgroup><col /><col /></colgroup><thead><tr class="tablesorter-headerRow"><th class="confluenceTh tablesorter-header sortableHeader tablesorter-headerUnSorted" scope="col" data-column="0"><div class="tablesorter-header-inner">问题</div></th><th class="confluenceTh tablesorter-header sortableHeader tablesorter-headerUnSorted" scope="col" data-column="1"><div class="tablesorter-header-inner">解决思路</div></th></tr></thead><tbody><tr><td class="confluenceTd" colspan="1"><p>dubbo-admin启动成功，但是元数据和服务测试功能无法正常使用</p></td><td class="confluenceTd" colspan="1"><ul><li>zk服务端的版本问题。测试后发现当前只支持zk3.4.13版本，3.4.14或者3.5.5都不支持；</li><li>admin的global配置问题，不能填写127.0.0.1，必须填写ip地址；</li><li>zk节点可以通过zooInspector手动删除；</li></ul></td></tr><tr><td class="confluenceTd" colspan="1"><p>dubbo服务启动多次后产生多个服务</p></td><td class="confluenceTd" colspan="1"><ul><li>2.7.1版本里zk的节点是默认静态节点，导致服务shutdown后依旧存在；此问题在2.7.2以后已经解决；</li><li>解决思路：优雅的关闭程序（1.idea中点击退出按钮，2.服务器上不要强杀进程，正常stop或者kill 进程）</li></ul></td></tr><tr><td class="confluenceTd" colspan="1"><p>dubbo-admin启动后服务端显示127.0.0.1</p></td><td class="confluenceTd" colspan="1"><ul><li>主要是主机名默认是127.0.0.1</li><li>解决思路（1.修改主机名 hostnamectl&nbsp;set-hostname&nbsp;xxx.xxx.xxx.xxx 2.在配置文件里指定dubbo的host（不建议））</li></ul></td></tr><tr><td class="confluenceTd" colspan="1">序列化报错</td><td class="confluenceTd" colspan="1">建议使用kryo序列化，其序列化效率明显优于Java序列化，若使用Java序列化，则bean需要实现Serializable接口；kryo并不需要，直接引入jar包maven引用即可</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、背景&quot;&gt;&lt;a href=&quot;#一、背景&quot; class=&quot;headerlink&quot; title=&quot;一、背景&quot;&gt;&lt;/a&gt;一、背景&lt;/h2&gt;&lt;p&gt;早期内部使用的是当当网fork的Dubbox，由于现在Dubbo又开始重新维护，而且阿里将其捐献给了Apache，并成为了Apache的顶级项目。因此dubbo版本升级到2.7.1势在必行。&lt;/p&gt;
&lt;h2 id=&quot;二、版本升级&quot;&gt;&lt;a href=&quot;#二、版本升级&quot; class=&quot;headerlink&quot; title=&quot;二、版本升级&quot;&gt;&lt;/a&gt;二、版本升级&lt;/h2&gt;&lt;p&gt;从2.8.4升级到2.7.1&lt;/p&gt;
&lt;p&gt;具体可以参考：&lt;/p&gt;
&lt;p&gt;Dubbo Spring Boot (v2.7.1) :&amp;nbsp;&lt;a href=&quot;https://github.com/apache/incubator-dubbo-spring-boot-project&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/apache/incubator-dubbo-spring-boot-project&lt;/a&gt;&lt;br&gt;Dubbo (v2.7.1) :&amp;nbsp;&lt;a href=&quot;https://github.com/apache/incubator-dubbo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/apache/incubator-dubbo&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;三、遇到的问题&quot;&gt;&lt;a href=&quot;#三、遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;三、遇到的问题&quot;&gt;&lt;/a&gt;三、遇到的问题&lt;/h2&gt;
    
    </summary>
    
    
      <category term="微服务" scheme="http://yoursite.com/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    
      <category term="Dubbo" scheme="http://yoursite.com/tags/Dubbo/"/>
    
  </entry>
  
  <entry>
    <title>Docker中安装mysql</title>
    <link href="http://yoursite.com/2018/12/15/Docker%E4%B8%AD%E5%AE%89%E8%A3%85mysql/"/>
    <id>http://yoursite.com/2018/12/15/Docker%E4%B8%AD%E5%AE%89%E8%A3%85mysql/</id>
    <published>2018-12-15T12:37:00.000Z</published>
    <updated>2020-05-19T07:07:30.616Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-docker-中下载-mysql"><a href="#1-docker-中下载-mysql" class="headerlink" title="1.docker 中下载 mysql"></a>1.docker 中下载 mysql</h4><div class="cnblogs_code"><pre>docker pull mysql</pre></div><h4 id="2-启动"><a href="#2-启动" class="headerlink" title="2.启动"></a>2.启动</h4><div class="cnblogs_code"><pre>docker run -itd --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql</pre></div><h4 id="3-进入容器"><a href="#3-进入容器" class="headerlink" title="3.进入容器"></a>3.进入容器</h4><div class="cnblogs_code"><pre>docker exec -it mysql bash</pre></div><h4 id="4-登录mysql，密码输入123456"><a href="#4-登录mysql，密码输入123456" class="headerlink" title="4.登录mysql，密码输入123456"></a>4.登录mysql，密码输入123456</h4><div class="cnblogs_code"><pre>mysql -u root -p</pre></div><h4 id="5-添加远程登录用户"><a href="#5-添加远程登录用户" class="headerlink" title="5.添加远程登录用户"></a>5.添加远程登录用户</h4><div class="cnblogs_code"><pre>ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '123456';FLUSH PRIVILEGES;</span></pre></div><p><audio controls="controls" style="display: none;"></audio></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-docker-中下载-mysql&quot;&gt;&lt;a href=&quot;#1-docker-中下载-mysql&quot; class=&quot;headerlink&quot; title=&quot;1.docker 中下载 mysql&quot;&gt;&lt;/a&gt;1.docker 中下载 mysql&lt;/h4&gt;&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;docker pull mysql&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;2-启动&quot;&gt;&lt;a href=&quot;#2-启动&quot; class=&quot;headerlink&quot; title=&quot;2.启动&quot;&gt;&lt;/a&gt;2.启动&lt;/h4&gt;&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;docker run -itd --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;3-进入容器&quot;&gt;&lt;a href=&quot;#3-进入容器&quot; class=&quot;headerlink&quot; title=&quot;3.进入容器&quot;&gt;&lt;/a&gt;3.进入容器&lt;/h4&gt;&lt;div class=&quot;cnblogs_code&quot;&gt;
&lt;pre&gt;docker exec -it mysql bash&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;4-登录mysql，密码输入123456&quot;&gt;&lt;a href=&quot;#4-登录mysql，密码输入123456&quot; class=&quot;headerlink&quot; title=&quot;4.登录mysql，密码输入123456&quot;&gt;&lt;/a&gt;4.登录mysql，密码输入123456&lt;/h4&gt;
    
    </summary>
    
    
      <category term="Devops" scheme="http://yoursite.com/categories/Devops/"/>
    
    
      <category term="Apollo" scheme="http://yoursite.com/tags/Apollo/"/>
    
      <category term="Mysql" scheme="http://yoursite.com/tags/Mysql/"/>
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker初识</title>
    <link href="http://yoursite.com/2018/12/13/Docker%E5%88%9D%E8%AF%86/"/>
    <id>http://yoursite.com/2018/12/13/Docker%E5%88%9D%E8%AF%86/</id>
    <published>2018-12-13T13:54:00.000Z</published>
    <updated>2020-05-19T07:07:30.685Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><p>&nbsp; &nbsp; Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</p><p><img src="https://i.loli.net/2020/04/09/25qW8AEgmO6dczv.png" alt="docker.png"></p><h2 id="二、Docker与虚拟机的比较"><a href="#二、Docker与虚拟机的比较" class="headerlink" title="二、Docker与虚拟机的比较"></a>二、Docker与虚拟机的比较</h2><p>&nbsp; &nbsp; Docker是在操作系统进程层面的隔离，而虚拟机是在物理资源层面的隔离，两者完全不同，另外，我们也可以通过下面的一个比较，了解两者的根本性差异。</p><p><img src="https://i.loli.net/2020/04/09/iAZlSEDQT94fBuq.png" alt="虚拟机与docker区别.png"></p><table><thead><tr><th>特性</th><th>容器</th><th>虚拟机</th></tr></thead><tbody><tr><td>启动</td><td>秒级</td><td>分钟级</td></tr><tr><td>硬盘使用</td><td>一般为MB</td><td>一般为GB</td></tr><tr><td>性能</td><td>接近原生</td><td>弱于</td></tr><tr><td>系统支持量</td><td>单机支持上千个容器</td><td>一般为几十个</td></tr></tbody></table><p>&nbsp; &nbsp; 从上面的容器与虚拟机的对比中，我们明白了容器技术的优势。</p><p>&nbsp; &nbsp; 容器就是一个不错的解决方案，容器能成为开发与运维之间沟通的语言，因为容器就像一个集装箱一样，提供了软件运行的最小化环境，将应用与其需要的环境一起打包成为镜像，便可以在开发与运维之间沟通与传输。我们常常会听到开发人员对运维人员说的这样一句话：&ldquo;在我的电脑运行没问题，怎么到了你那里就出问题了，肯定是你的问题&rdquo;，而运维人员则认为是开发人员的问题。通过Docker容器可以解决开发人员与运维人员之间的矛盾。</p><h2 id="三、核心概念"><a href="#三、核心概念" class="headerlink" title="三、核心概念"></a>三、核心概念</h2><p>&nbsp; &nbsp; Docker 包括三个基本概念如下。具体关系如下图所示。</p><p><img src="https://i.loli.net/2020/04/09/879WzMcmu2RqHlx.png" alt="docker镜像容器仓库.png"></p><h4 id="3-1-镜像（Image）"><a href="#3-1-镜像（Image）" class="headerlink" title="3.1 镜像（Image）"></a>3.1 镜像（Image）</h4><p>&nbsp; &nbsp; Docker 镜像（Image），就相当于是一个 root 文件系统。比如官方镜像 ubuntu:16.04 就包含了完整的一套 Ubuntu16.04 最小系统的 root 文件系统。&nbsp; &nbsp;</p><h4 id="3-2-容器（Container）"><a href="#3-2-容器（Container）" class="headerlink" title="3.2 容器（Container）"></a>3.2 容器（Container）</h4><p>&nbsp; &nbsp; 镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。</p><h4 id="3-3-仓库（Repository）"><a href="#3-3-仓库（Repository）" class="headerlink" title="3.3 仓库（Repository）"></a>3.3 仓库（Repository）</h4><p>&nbsp; &nbsp; 仓库可看着一个代码控制中心，用来保存镜像。</p><h2 id="四、Docker的版本"><a href="#四、Docker的版本" class="headerlink" title="四、Docker的版本"></a>四、Docker的版本</h2><p>&nbsp; &nbsp; Docker分为社区版(CE)和企业版(EE)两个版本，社区版本可以免费使用，而企业版则需要付费使用，对于我们个人开发者或小企业来说，一般是使用社区版的。</p><p>&nbsp; &nbsp; Docker CE有三个更新频道，分别为stable、test、nightly，stable是稳定版本，test是测试后的预发布版本，而nightly则是开发中准备在下一个版本正式发布的版本，我们可以根据自己的需求下载安装。</p><h2 id="五、如何安装"><a href="#五、如何安装" class="headerlink" title="五、如何安装"></a>五、如何安装</h2><h4 id="5-1-安装必要的一些系统工具"><a href="#5-1-安装必要的一些系统工具" class="headerlink" title="5.1 安装必要的一些系统工具"></a>5.1 安装必要的一些系统工具</h4><div class="cnblogs_code"><pre>sudo yum install -y yum-utils device-mapper-persistent-data lvm2</pre></div><h4 id="5-2-添加软件源信息"><a href="#5-2-添加软件源信息" class="headerlink" title="5.2 添加软件源信息"></a>5.2 添加软件源信息</h4><div class="cnblogs_code"><pre>sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</pre></div><h4 id="5-3-更新并安装Docker-CE"><a href="#5-3-更新并安装Docker-CE" class="headerlink" title="5.3 更新并安装Docker-CE"></a>5.3 更新并安装Docker-CE</h4><div class="cnblogs_code"><pre>sudo yum makecache fastsudo yum -y install docker-ce</span></pre></div><h4 id="5-4-开启Docker服务"><a href="#5-4-开启Docker服务" class="headerlink" title="5.4 开启Docker服务"></a>5.4 开启Docker服务</h4><div class="cnblogs_code"><pre>sudo service docker start</pre></div><h4 id="5-5-查看docker版本"><a href="#5-5-查看docker版本" class="headerlink" title="5.5 查看docker版本"></a>5.5 查看docker版本</h4><div class="cnblogs_code"><pre>docker version</pre></div><h4 id="5-6-开启-docker-并设置开机自启动"><a href="#5-6-开启-docker-并设置开机自启动" class="headerlink" title="5.6 开启 docker 并设置开机自启动"></a>5.6 开启 docker 并设置开机自启动</h4><div class="cnblogs_code"><pre>systemctl start dockersymctl enable d</span></pre></div><p><audio controls="controls" style="display: none;"></audio></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、简介&quot;&gt;&lt;a href=&quot;#一、简介&quot; class=&quot;headerlink&quot; title=&quot;一、简介&quot;&gt;&lt;/a&gt;一、简介&lt;/h2&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/09/25qW8AEgmO6dczv.png&quot; alt=&quot;docker.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;二、Docker与虚拟机的比较&quot;&gt;&lt;a href=&quot;#二、Docker与虚拟机的比较&quot; class=&quot;headerlink&quot; title=&quot;二、Docker与虚拟机的比较&quot;&gt;&lt;/a&gt;二、Docker与虚拟机的比较&lt;/h2&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; Docker是在操作系统进程层面的隔离，而虚拟机是在物理资源层面的隔离，两者完全不同，另外，我们也可以通过下面的一个比较，了解两者的根本性差异。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/09/iAZlSEDQT94fBuq.png&quot; alt=&quot;虚拟机与docker区别.png&quot;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;容器&lt;/th&gt;
&lt;th&gt;虚拟机&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;启动&lt;/td&gt;
&lt;td&gt;秒级&lt;/td&gt;
&lt;td&gt;分钟级&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;硬盘使用&lt;/td&gt;
&lt;td&gt;一般为MB&lt;/td&gt;
&lt;td&gt;一般为GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;性能&lt;/td&gt;
&lt;td&gt;接近原生&lt;/td&gt;
&lt;td&gt;弱于&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;系统支持量&lt;/td&gt;
&lt;td&gt;单机支持上千个容器&lt;/td&gt;
&lt;td&gt;一般为几十个&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
      <category term="Devops" scheme="http://yoursite.com/categories/Devops/"/>
    
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Java项目main方法启动的两种方式</title>
    <link href="http://yoursite.com/2018/11/26/Java%E9%A1%B9%E7%9B%AEmain%E6%96%B9%E6%B3%95%E5%90%AF%E5%8A%A8%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/11/26/Java%E9%A1%B9%E7%9B%AEmain%E6%96%B9%E6%B3%95%E5%90%AF%E5%8A%A8%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/</id>
    <published>2018-11-26T08:36:00.000Z</published>
    <updated>2020-05-19T07:07:31.078Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-打包时指定了主类，可以直接用java-jar-xxx-jar"><a href="#1-打包时指定了主类，可以直接用java-jar-xxx-jar" class="headerlink" title="1.打包时指定了主类，可以直接用java -jar xxx.jar"></a>1.打包时指定了主类，可以直接用java -jar xxx.jar</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--main方法打包jar包插件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-assembly-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appendAssemblyId</span>&gt;</span>false<span class="tag">&lt;/<span class="name">appendAssemblyId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">descriptorRef</span>&gt;</span>jar-with-dependencies<span class="tag">&lt;/<span class="name">descriptorRef</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">descriptorRefs</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span>com.TestApplication<span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>make-assembly<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">goal</span>&gt;</span>assembly<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-打包时没有指定主类，可以用java-cp-xxx-jar-主类名称（绝对路径）"><a href="#2-打包时没有指定主类，可以用java-cp-xxx-jar-主类名称（绝对路径）" class="headerlink" title="2.打包时没有指定主类，可以用java -cp xxx.jar 主类名称（绝对路径）"></a>2.打包时没有指定主类，可以用java -cp xxx.jar 主类名称（绝对路径）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp xxx.jar com.TestApplication</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-打包时指定了主类，可以直接用java-jar-xxx-jar&quot;&gt;&lt;a href=&quot;#1-打包时指定了主类，可以直接用java-jar-xxx-jar&quot; class=&quot;headerlink&quot; title=&quot;1.打包时指定了主类，可以直接用java -jar xx
      
    
    </summary>
    
    
      <category term="Java基础" scheme="http://yoursite.com/categories/Java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>zookeeper安装</title>
    <link href="http://yoursite.com/2018/11/20/Zookeeper%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2018/11/20/Zookeeper%E5%AE%89%E8%A3%85/</id>
    <published>2018-11-20T13:00:00.000Z</published>
    <updated>2020-05-19T07:07:31.692Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-下载zk软件"><a href="#1-下载zk软件" class="headerlink" title="1.下载zk软件"></a>1.下载zk软件</h3><p><a href="http://www.apache.org/dyn/closer.cgi/zookeeper/" target="_blank" rel="noopener">http://www.apache.org/dyn/closer.cgi/zookeeper/</a></p><h3 id="2-解压压缩包"><a href="#2-解压压缩包" class="headerlink" title="2.解压压缩包"></a>2.解压压缩包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tar zxvf zookeeper-3.4.13.tar.gz</span></span><br></pre></td></tr></table></figure><h3 id="3-创建zoo-cfg"><a href="#3-创建zoo-cfg" class="headerlink" title="3.创建zoo.cfg"></a>3.创建zoo.cfg</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd zookeeper-3.4.13/conf</span></span><br><span class="line"><span class="comment"># cp zoo_sample.cfg zoo.cfg</span></span><br></pre></td></tr></table></figure><h3 id="4-获取zk的路径"><a href="#4-获取zk的路径" class="headerlink" title="4.获取zk的路径"></a>4.获取zk的路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pwd</span></span><br></pre></td></tr></table></figure><p>/home/software/zookeeper-3.4.13</p><h3 id="5-修改zoo-cfg"><a href="#5-修改zoo-cfg" class="headerlink" title="5.修改zoo.cfg"></a>5.修改zoo.cfg</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim zoo.cfg</span></span><br></pre></td></tr></table></figure><p>设置dataDir=/home/software/zookeeper-3.4.13/data</p><h3 id="6-zk启动、关闭、查看状态"><a href="#6-zk启动、关闭、查看状态" class="headerlink" title="6.zk启动、关闭、查看状态"></a>6.zk启动、关闭、查看状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd bin</span></span><br></pre></td></tr></table></figure><ul><li>启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./zkServer.sh start</span></span><br></pre></td></tr></table></figure><ul><li>关闭</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./zkServer.sh stop</span></span><br></pre></td></tr></table></figure><ul><li>查看状态</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./zkServer.sh status</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-下载zk软件&quot;&gt;&lt;a href=&quot;#1-下载zk软件&quot; class=&quot;headerlink&quot; title=&quot;1.下载zk软件&quot;&gt;&lt;/a&gt;1.下载zk软件&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.apache.org/dyn/closer.cgi/zookeeper/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.apache.org/dyn/closer.cgi/zookeeper/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-解压压缩包&quot;&gt;&lt;a href=&quot;#2-解压压缩包&quot; class=&quot;headerlink&quot; title=&quot;2.解压压缩包&quot;&gt;&lt;/a&gt;2.解压压缩包&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# tar zxvf zookeeper-3.4.13.tar.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-创建zoo-cfg&quot;&gt;&lt;a href=&quot;#3-创建zoo-cfg&quot; class=&quot;headerlink&quot; title=&quot;3.创建zoo.cfg&quot;&gt;&lt;/a&gt;3.创建zoo.cfg&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# cd zookeeper-3.4.13/conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# cp zoo_sample.cfg zoo.cfg&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;4-获取zk的路径&quot;&gt;&lt;a href=&quot;#4-获取zk的路径&quot; class=&quot;headerlink&quot; title=&quot;4.获取zk的路径&quot;&gt;&lt;/a&gt;4.获取zk的路径&lt;/h3&gt;
    
    </summary>
    
    
      <category term="zookeeper" scheme="http://yoursite.com/categories/zookeeper/"/>
    
    
      <category term="zookeeper" scheme="http://yoursite.com/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>内网穿透反向代理工具frp的使用</title>
    <link href="http://yoursite.com/2018/03/10/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7frp%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/03/10/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7frp%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2018-03-10T13:03:00.000Z</published>
    <updated>2020-05-19T07:07:31.757Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a>1.背景</h3><p>frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。场景：近期在研究微信公众号开发，发现需要暴露公网地址，并且是80端口的服务，正好手边有朋友买了腾讯云服务器，因此想通过腾讯云服务器作为frp的服务端，本地机器作为客户端，让公网可以直接访问内网本地机器发布的服务，实现内网穿透。</p><h3 id="2-作用"><a href="#2-作用" class="headerlink" title="2.作用"></a>2.作用</h3><ol><li><p>利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。</p></li><li><p>对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。</p></li><li><p>利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。</p></li></ol><h3 id="3-具体实现"><a href="#3-具体实现" class="headerlink" title="3.具体实现"></a>3.具体实现</h3><p>通过tcp方式访问公司内网服务（当前公网服务器没有绑定域名的情况下）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#修改 frps.ini 文件，这里使用了最简化的配置：</span><br><span class="line"># frps.ini</span><br><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br><span class="line">启动 frps：</span><br><span class="line">./frps -c ./frps.ini</span><br><span class="line"></span><br><span class="line">#修改 frpc.ini 文件，假设 frps 所在服务器的公网 IP 为 x.x.x.x；</span><br><span class="line"># frpc.ini</span><br><span class="line">[common]</span><br><span class="line">server_addr = x.x.x.x</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 8088</span><br><span class="line">remote_port = 80</span><br><span class="line">启动 frpc：</span><br><span class="line">./frpc -c ./frpc.ini</span><br></pre></td></tr></table></figure><p>通过http的方式访问公司内网服务（当前公网服务器已经绑定域名的情况下）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#修改 frps.ini 文件</span><br><span class="line">[common]</span><br><span class="line"># frp服务监听client的端口</span><br><span class="line">bind_port = 7000</span><br><span class="line"># http形式的外网开放端口</span><br><span class="line">vhost_http_port = 7001</span><br><span class="line"># 子域名</span><br><span class="line">subdomain_host = vic.com</span><br><span class="line"></span><br><span class="line">#修改 frpc.ini 文件</span><br><span class="line">[http-8088]</span><br><span class="line"># http-8051 表示名字，随便起</span><br><span class="line"># type有http、tcp等多种类型，一般只用这两种</span><br><span class="line">type = http</span><br><span class="line"># 需要穿透内网服务的ip</span><br><span class="line">local_ip = 192.168.1.187</span><br><span class="line"># 内网服务的端口</span><br><span class="line">local_port = 8088</span><br><span class="line"># 子域名，因为ynt.ai开启了域名泛解析，二级域名只是作为每个服务的区分</span><br><span class="line"># 不可与其他服务的子域名重复</span><br><span class="line">subdomain = test</span><br><span class="line"># 比如这个服务只用访问 http://test.vic.com:7001就可以访问到</span><br></pre></td></tr></table></figure><p>通过浏览器查看 frp 的状态以及代理统计信息展示。需要在 frps.ini 中指定 dashboard 服务使用的端口，即可开启此功能：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">dashboard_port = 7500</span><br><span class="line"># dashboard 用户名密码，默认都为 admin</span><br><span class="line">dashboard_user = admin</span><br><span class="line">dashboard_pwd = admin</span><br></pre></td></tr></table></figure><p>打开浏览器通过&nbsp;<code>http://[server_addr]:7500</code>&nbsp;访问 dashboard 界面，用户名密码默认为&nbsp;<code>admin</code>。</p><p><img src="https://i.loli.net/2020/04/14/dBmCWyTRUtehGfl.jpg" alt="QQ截图20180310205939.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-背景&quot;&gt;&lt;a href=&quot;#1-背景&quot; class=&quot;headerlink&quot; title=&quot;1.背景&quot;&gt;&lt;/a&gt;1.背景&lt;/h3&gt;&lt;p&gt;frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。场景：近期在研究微信公众号开发，发现需要暴露公网地址，并且是80端口的服务，正好手边有朋友买了腾讯云服务器，因此想通过腾讯云服务器作为frp的服务端，本地机器作为客户端，让公网可以直接访问内网本地机器发布的服务，实现内网穿透。&lt;/p&gt;
&lt;h3 id=&quot;2-作用&quot;&gt;&lt;a href=&quot;#2-作用&quot; class=&quot;headerlink&quot; title=&quot;2.作用&quot;&gt;&lt;/a&gt;2.作用&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;3-具体实现&quot;&gt;&lt;a href=&quot;#3-具体实现&quot; class=&quot;headerlink&quot; title=&quot;3.具体实现&quot;&gt;&lt;/a&gt;3.具体实现&lt;/h3&gt;&lt;p&gt;通过tcp方式访问公司内网服务（当前公网服务器没有绑定域名的情况下）&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#修改 frps.ini 文件，这里使用了最简化的配置：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# frps.ini&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[common]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bind_port = 7000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;启动 frps：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./frps -c ./frps.ini&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#修改 frpc.ini 文件，假设 frps 所在服务器的公网 IP 为 x.x.x.x；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# frpc.ini&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[common]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server_addr = x.x.x.x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server_port = 7000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ssh]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type = tcp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;local_ip = 127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;local_port = 8088&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;remote_port = 80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;启动 frpc：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./frpc -c ./frpc.ini&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="工具" scheme="http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="frp" scheme="http://yoursite.com/tags/frp/"/>
    
  </entry>
  
  <entry>
    <title>Nginx负载均衡初识</title>
    <link href="http://yoursite.com/2018/02/22/Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%88%9D%E8%AF%86/"/>
    <id>http://yoursite.com/2018/02/22/Nginx%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%88%9D%E8%AF%86/</id>
    <published>2018-02-22T09:33:00.000Z</published>
    <updated>2020-05-19T07:07:31.225Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a>1.背景</h3><p>　　nginx是一款自由的、开源的、高性能的HTTP服务器和反向代理服务器；同时也是一个IMAP、POP3、SMTP代理服务器；nginx可以作为一个HTTP服务器进行网站的发布处理，另外nginx可以作为反向代理进行负载均衡的实现。</p><h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h3><ul><li><p>下载nginx最新版本到linux服务器上，解压tar -zxvf nginx-1.13.8.tar.gz，进入解压目录 cd nginx-1.13.8，并进行手动安装。</p></li><li><p>配置：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx</span><br></pre></td></tr></table></figure><ul><li>编辑nginx：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><ul><li>安装：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure><ul><li>启动nginx：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/<span class="built_in">local</span>/nginx/sbin/nginx -c /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><h3 id="3-修改配置"><a href="#3-修改配置" class="headerlink" title="3.修改配置"></a>3.修改配置</h3><p>　　在/usr/local/nginx/conf#目录下执行vim nginx.conf，进行nginx的配置，采用轮询的方式，端口号：8066，如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#gzip  on;</span><br><span class="line">    upstream test&#123;</span><br><span class="line">            server 192.168.1.15:8087 weight=10;</span><br><span class="line">            server 192.168.1.15:8088 weight=10;</span><br><span class="line">    &#125;    </span><br><span class="line">        </span><br><span class="line">    server &#123;</span><br><span class="line">        listen       8066;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line">    </span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line">    </span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_pass http://test;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">            proxy_redirect off;</span><br><span class="line">            proxy_set_header Host $http_host;</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="4-启动nginx"><a href="#4-启动nginx" class="headerlink" title="4.启动nginx"></a>4.启动nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sbin/nginx</span><br></pre></td></tr></table></figure><h3 id="5-停止nginx"><a href="#5-停止nginx" class="headerlink" title="5.停止nginx"></a>5.停止nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sbin/nginx -s stop</span><br></pre></td></tr></table></figure><h3 id="6-访问服务"><a href="#6-访问服务" class="headerlink" title="6.访问服务"></a>6.访问服务</h3><p>通过<a href="http://localhost:8066" target="_blank" rel="noopener">http://localhost:8066</a>负载均衡访问192.168.1.15上的两个服务。</p><h3 id="7-负载均衡"><a href="#7-负载均衡" class="headerlink" title="7.负载均衡"></a>7.负载均衡</h3><p>　　nginx支持的负载均衡调度算法方式如下：</p><ul><li><p>weight轮询（默认）：接收到的请求按照顺序逐一分配到不同的后端服务器，即使在使用过程中，某一台后端服务器宕机，nginx会自动将该服务器剔除出队列，请求受理情况不会受到任何影响。 这种方式下，可以给不同的后端服务器设置一个权重值（weight），用于调整不同的服务器上请求的分配率；权重数据越大，被分配到请求的几率越大；该权重值，主要是针对实际工作环境中不同的后端服务器硬件配置进行调整的。</p></li><li><p>ip_hash：每个请求按照发起客户端的ip的hash结果进行匹配，这样的算法下一个固定ip地址的客户端总会访问到同一个后端服务器，这也在一定程度上解决了集群部署环境下session共享的问题。</p></li><li><p>fair：智能调整调度算法，动态的根据后端服务器的请求处理到响应的时间进行均衡分配，响应时间短处理效率高的服务器分配到请求的概率高，响应时间长处理效率低的服务器分配到的请求少；结合了前两者的优点的一种调度算法。但是需要注意的是nginx默认不支持fair算法，如果要使用这种调度算法，请安装upstream_fair模块</p></li><li><p>url_hash：按照访问的url的hash结果分配请求，每个请求的url会指向后端固定的某个服务器，可以在nginx作为静态服务器的情况下提高缓存效率。同样要注意nginx默认不支持这种调度算法，要使用的话需要安装nginx的hash软件包。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-背景&quot;&gt;&lt;a href=&quot;#1-背景&quot; class=&quot;headerlink&quot; title=&quot;1.背景&quot;&gt;&lt;/a&gt;1.背景&lt;/h3&gt;&lt;p&gt;　　nginx是一款自由的、开源的、高性能的HTTP服务器和反向代理服务器；同时也是一个IMAP、POP3、SMTP代理服务器；nginx可以作为一个HTTP服务器进行网站的发布处理，另外nginx可以作为反向代理进行负载均衡的实现。&lt;/p&gt;
&lt;h3 id=&quot;2-安装&quot;&gt;&lt;a href=&quot;#2-安装&quot; class=&quot;headerlink&quot; title=&quot;2.安装&quot;&gt;&lt;/a&gt;2.安装&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载nginx最新版本到linux服务器上，解压tar -zxvf nginx-1.13.8.tar.gz，进入解压目录 cd nginx-1.13.8，并进行手动安装。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./configure --prefix=/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/nginx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;编辑nginx：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;make&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Nginx" scheme="http://yoursite.com/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="http://yoursite.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>GitLab问题小结</title>
    <link href="http://yoursite.com/2018/01/06/GitLab%E9%97%AE%E9%A2%98%E5%B0%8F%E7%BB%93/"/>
    <id>http://yoursite.com/2018/01/06/GitLab%E9%97%AE%E9%A2%98%E5%B0%8F%E7%BB%93/</id>
    <published>2018-01-06T11:00:00.000Z</published>
    <updated>2020-05-19T07:07:30.945Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-内存消耗太大"><a href="#1-内存消耗太大" class="headerlink" title="1.内存消耗太大"></a>1.内存消耗太大</h3><p>　　（1）公司使用gitlab后，发现服务器内存居高不下，使用top命令查看内存消耗，发现服务器上git将近消耗一半内存资源。而且很奇怪的是竟然开启了32个进程。后经查资料，原来这跟gitlab的默认机制有关。在配置文件/etc/gitlab/gitlab.rb里，unicorn[‘worker_processes’] = 2，默认是被注释掉的，这就解释了为什么会开启32个进程，因为cpu有32核，如果服务器只用于GitLab的话，官方建议是CPU核心数加一，可以提高服务器的响应速度。不过如果内存只有4G，或者服务器同时承载其他服务，就不要改了，以免内存不足。另外，这个参数最小值是2，设为1，服务器可能会卡死。</p><p>　　（2）解决方案：根据服务器使用情况，给unicorn[‘worker_processes’]设置一个合适的值，可解决内存占用过大问题。</p><h3 id="2-时间不一致"><a href="#2-时间不一致" class="headerlink" title="2.时间不一致"></a>2.时间不一致</h3><p>　　gitlab的web页面上activity里显示的时间相差8小时，很有可能是时区设置问题，设置时区为：gitlab_rails[‘time_zone’] = ‘Asia/Shanghai’，还有种可能是服务器本身的时间有问题，服务器服务时间修改注意事项：写入clock -w &nbsp;,强制将时间写入COMS！这样重启后不会失效。&nbsp;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-内存消耗太大&quot;&gt;&lt;a href=&quot;#1-内存消耗太大&quot; class=&quot;headerlink&quot; title=&quot;1.内存消耗太大&quot;&gt;&lt;/a&gt;1.内存消耗太大&lt;/h3&gt;&lt;p&gt;　　（1）公司使用gitlab后，发现服务器内存居高不下，使用top命令查看内存消耗，发现服
      
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="GitLab" scheme="http://yoursite.com/tags/GitLab/"/>
    
  </entry>
  
  <entry>
    <title>GitLab服务器迁移</title>
    <link href="http://yoursite.com/2018/01/06/GitLab%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%81%E7%A7%BB/"/>
    <id>http://yoursite.com/2018/01/06/GitLab%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%81%E7%A7%BB/</id>
    <published>2018-01-06T01:58:00.000Z</published>
    <updated>2020-05-19T07:07:30.884Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、背景"><a href="#一、背景" class="headerlink" title="一、背景"></a>一、背景</h3><p>由于GitLab内存消耗很大，已经影响到A服务器上的其他服务，同时考虑到代码管理服务应该单独部署在一台服务器上，因此决定从服务器A迁移到服务器B上。两台服务器均是CentOS 7，gitlab版本是gitlab-ce-9.5.6-ce.0.el7.x86_64.rpm 。注意：高版本的Gitlab无法恢复低版本备份的数据,需要注意在B服务器部署和A服务器一样版本的gitlab,部署好环境后开始备份和数据迁移。</p><h3 id="二、备份"><a href="#二、备份" class="headerlink" title="二、备份"></a>二、备份</h3><p>备份A服务器上的gitlab数据，执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:create RAILS_ENV=production</span><br></pre></td></tr></table></figure><p>PS: 备份后的文件一般是位于/var/opt/gitlab/backups下。</p><h3 id="三、拷贝"><a href="#三、拷贝" class="headerlink" title="三、拷贝"></a>三、拷贝</h3><p>从A服务上拷贝gitlab数据到B服务器上，执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp root@A_ip:/var/opt/gitlab/backups/1515132280_2018_01_05_9.5.6_gitlab_backup.tar /var/opt/gitlab/backups</span><br></pre></td></tr></table></figure><p>其中A_ip是A服务器IP地址。</p><h3 id="四、还原"><a href="#四、还原" class="headerlink" title="四、还原"></a>四、还原</h3><p>在B服务器的/var/opt/gitlab/backups的目录下还原gitlab数据，执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-rake gitlab:backup:restore RAILS_ENV=production BACKUP=1515132280_2018_01_05_9.5.6</span><br></pre></td></tr></table></figure><p>PS：BACKUP的参数必须与原服务器备份后的文件名一致。</p><h3 id="五、问题"><a href="#五、问题" class="headerlink" title="五、问题"></a>五、问题</h3><p>还原过程中报错，报错：无法 open:<br>权限不够，估计是拷贝过来的还原文件权限不够，执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 644 1515132280_2018_01_05_9.5.6_gitlab_backup.tar</span><br></pre></td></tr></table></figure><p>再次执行还原命令即可成功。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、背景&quot;&gt;&lt;a href=&quot;#一、背景&quot; class=&quot;headerlink&quot; title=&quot;一、背景&quot;&gt;&lt;/a&gt;一、背景&lt;/h3&gt;&lt;p&gt;由于GitLab内存消耗很大，已经影响到A服务器上的其他服务，同时考虑到代码管理服务应该单独部署在一台服务器上，因此决定从服务器A迁移到服务器B上。两台服务器均是CentOS 7，gitlab版本是gitlab-ce-9.5.6-ce.0.el7.x86_64.rpm 。注意：高版本的Gitlab无法恢复低版本备份的数据,需要注意在B服务器部署和A服务器一样版本的gitlab,部署好环境后开始备份和数据迁移。&lt;/p&gt;
&lt;h3 id=&quot;二、备份&quot;&gt;&lt;a href=&quot;#二、备份&quot; class=&quot;headerlink&quot; title=&quot;二、备份&quot;&gt;&lt;/a&gt;二、备份&lt;/h3&gt;&lt;p&gt;备份A服务器上的gitlab数据，执行命令：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gitlab-rake gitlab:backup:create RAILS_ENV=production&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;PS: 备份后的文件一般是位于/var/opt/gitlab/backups下。&lt;/p&gt;
&lt;h3 id=&quot;三、拷贝&quot;&gt;&lt;a href=&quot;#三、拷贝&quot; class=&quot;headerlink&quot; title=&quot;三、拷贝&quot;&gt;&lt;/a&gt;三、拷贝&lt;/h3&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="GitLab" scheme="http://yoursite.com/tags/GitLab/"/>
    
  </entry>
  
  <entry>
    <title>idea使用Protobuf插件</title>
    <link href="http://yoursite.com/2017/11/06/idea%E4%BD%BF%E7%94%A8Protobuf%E6%8F%92%E4%BB%B6/"/>
    <id>http://yoursite.com/2017/11/06/idea%E4%BD%BF%E7%94%A8Protobuf%E6%8F%92%E4%BB%B6/</id>
    <published>2017-11-06T09:06:00.000Z</published>
    <updated>2020-05-19T07:07:30.960Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-protobuf简介"><a href="#1-protobuf简介" class="headerlink" title="1.protobuf简介"></a>1.protobuf简介</h3><p>　　Protobuf是一个灵活的、高效的用于序列化数据的协议。相比较XML和JSON格式，protobuf更小、更快、更便捷。Protobuf是跨语言的，并且自带了一个编译器(protoc)，只需要用它进行编译，可以编译成Java、python、C++等代码，然后就可以直接使用，不需要再写其他代码，自带有解析的代码。一条消息数据，用protobuf序列化后的大小是json的10分之一，xml格式的20分之一，是二进制序列化的10分之一。　　</p><h3 id="2-安装插件"><a href="#2-安装插件" class="headerlink" title="2.安装插件"></a>2.安装插件</h3><p>在idea里安装插件Protobuf Support</p><h3 id="3-配置"><a href="#3-配置" class="headerlink" title="3.配置"></a>3.配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.grpc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>grpc-netty<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;grpc.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.grpc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>grpc-protobuf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;grpc.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.grpc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>grpc-stub<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;grpc.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.protobuf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>protobuf-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;protobuf.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">extensions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">extension</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>kr.motd.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>os-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.0.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">extension</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">extensions</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--protobuf插件--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.xolstice.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>protobuf-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">protocArtifact</span>&gt;</span></span><br><span class="line">         com.google.protobuf:protoc:$&#123;protobuf.version&#125;:exe:$&#123;os.detected.classifier&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">protocArtifact</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">pluginId</span>&gt;</span>grpc-java<span class="tag">&lt;/<span class="name">pluginId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">pluginArtifact</span>&gt;</span></span><br><span class="line">         io.grpc:protoc-gen-grpc-java:$&#123;grpc.version&#125;:exe:$&#123;os.detected.classifier&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">pluginArtifact</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goal</span>&gt;</span>compile-custom<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-创建proto文件"><a href="#4-创建proto文件" class="headerlink" title="4.创建proto文件"></a>4.创建proto文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">syntax = "proto3";</span><br><span class="line">option java_package = "com.ynt.ai.activemq.protobuf";</span><br><span class="line">option java_outer_classname = "PersonModel";</span><br><span class="line"></span><br><span class="line">message Person &#123;</span><br><span class="line">    int32 id = 1;</span><br><span class="line">    string name = 2;</span><br><span class="line">    string email = 3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-生成java对象文件"><a href="#5-生成java对象文件" class="headerlink" title="5.生成java对象文件"></a>5.生成java对象文件</h3><p>　　通过Protobuf插件的compile命令，如下图所示，自动生成对象文件。</p><p><img src="https://i.loli.net/2020/04/10/zpLDClJUFg2X7t3.png" alt="QQ截图20171106165834.png"></p><h3 id="6-测试"><a href="#6-测试" class="headerlink" title="6.测试"></a>6.测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PersonMsg.Person person = PersonMsg.Person.newBuilder().setId(<span class="number">2</span>).setName(<span class="string">"test"</span>)</span><br><span class="line">                .setEmail(<span class="string">"test@163.com"</span>).build();</span><br><span class="line"> <span class="keyword">byte</span>[] results = person.toByteArray();</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">byte</span> b : results) &#123;</span><br><span class="line">   log.info(String.valueOf(b));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-protobuf简介&quot;&gt;&lt;a href=&quot;#1-protobuf简介&quot; class=&quot;headerlink&quot; title=&quot;1.protobuf简介&quot;&gt;&lt;/a&gt;1.protobuf简介&lt;/h3&gt;&lt;p&gt;　　Protobuf是一个灵活的、高效的用于序列化数据的协议。相比较XML和JSON格式，protobuf更小、更快、更便捷。Protobuf是跨语言的，并且自带了一个编译器(protoc)，只需要用它进行编译，可以编译成Java、python、C++等代码，然后就可以直接使用，不需要再写其他代码，自带有解析的代码。一条消息数据，用protobuf序列化后的大小是json的10分之一，xml格式的20分之一，是二进制序列化的10分之一。
　　&lt;/p&gt;
&lt;h3 id=&quot;2-安装插件&quot;&gt;&lt;a href=&quot;#2-安装插件&quot; class=&quot;headerlink&quot; title=&quot;2.安装插件&quot;&gt;&lt;/a&gt;2.安装插件&lt;/h3&gt;&lt;p&gt;在idea里安装插件Protobuf Support&lt;/p&gt;
&lt;h3 id=&quot;3-配置&quot;&gt;&lt;a href=&quot;#3-配置&quot; class=&quot;headerlink&quot; title=&quot;3.配置&quot;&gt;&lt;/a&gt;3.配置&lt;/h3&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;io.grpc&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;grpc-netty&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;grpc.version&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;provided&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;io.grpc&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;grpc-protobuf&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;grpc.version&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;provided&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;io.grpc&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;grpc-stub&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;grpc.version&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;provided&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.google.protobuf&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;protobuf-java&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;$&amp;#123;protobuf.version&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;extensions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;extension&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;kr.motd.maven&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;os-maven-plugin&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.5.0.Final&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;extension&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;extensions&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="通信协议" scheme="http://yoursite.com/categories/%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/"/>
    
    
      <category term="Protobuf" scheme="http://yoursite.com/tags/Protobuf/"/>
    
  </entry>
  
  <entry>
    <title>Linux环境GitLab安装与配置</title>
    <link href="http://yoursite.com/2017/10/30/Linux%E7%8E%AF%E5%A2%83GitLab%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2017/10/30/Linux%E7%8E%AF%E5%A2%83GitLab%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</id>
    <published>2017-10-30T09:22:00.000Z</published>
    <updated>2020-05-19T07:07:31.148Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a>1.背景</h2><p>　　近期公司源代码管理工具从svn转向git，因此要在服务器上部署gitlab，总共部署了两台服务器，一台是Ubuntu server 17.04，一台是Centos7。在部署的过程中遇到不少问题，发现Linux里通过命令直接去Gitlab官网上下载程序根本不能成功，不管是在Ubuntu还是Centos上。后来只能去Gitlab官网手动下载安装包，然后再去Linux里通过命令去执行才能安装。</p><h2 id="2-软件下载"><a href="#2-软件下载" class="headerlink" title="2.软件下载"></a>2.软件下载</h2><h3 id="2-1-Gitlab官网"><a href="#2-1-Gitlab官网" class="headerlink" title="2.1 Gitlab官网"></a>2.1 Gitlab官网</h3><p>　　官网地址：<a href="https://about.gitlab.com/downloads/" target="_blank" rel="noopener">https://about.gitlab.com/downloads/</a></p><h3 id="2-2-镜像站"><a href="#2-2-镜像站" class="headerlink" title="2.2 镜像站"></a>2.2 镜像站</h3><p>　　软件地址：<a href="https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu/pool/xenial/main/g/gitlab-ce/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu/pool/xenial/main/g/gitlab-ce/</a><br>但是有时候镜像站也会打不开，但是速度肯定要比官网快多了。</p><h3 id="2-3-Ubuntu版本"><a href="#2-3-Ubuntu版本" class="headerlink" title="2.3 Ubuntu版本"></a>2.3 Ubuntu版本</h3><p>Ubuntu server 17.04下载的版本是gitlab-ce_9.5.6-ce.0_amd64.deb</p><h3 id="2-4-Centos版本"><a href="#2-4-Centos版本" class="headerlink" title="2.4 Centos版本"></a>2.4 Centos版本</h3><p>centos7下载的版本是gitlab-ce-9.5.6-ce.0.el7.x86_64.rpm</p><h2 id="3-安装"><a href="#3-安装" class="headerlink" title="3.安装"></a>3.安装</h2><h4 id="3-1-ubuntu环境"><a href="#3-1-ubuntu环境" class="headerlink" title="3.1 ubuntu环境"></a>3.1 ubuntu环境</h4><ul><li>执行命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install curl openssh-server ca-certificates postfix</span><br></pre></td></tr></table></figure><ul><li>配置postfix邮箱</li><li>使用命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ dpkg -i gitlab-ce_9.5.6-ce.0_amd64.deb</span><br></pre></td></tr></table></figure><ul><li>出现 It looks like&hellip; 表示安装成功！</li><li>配置gitlab</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/gitlab</span><br><span class="line">touch /etc/gitlab/gitlab.rb</span><br><span class="line">chmod 600 /etc/gitlab/gitlab.rb</span><br><span class="line">vim/etc/gitlab/gitlab.rb</span><br></pre></td></tr></table></figure><ul><li><p>把external_url改成部署机器的域名或者IP地址</p></li><li><p>执行命令：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl reconfigure</span><br><span class="line">gitlab-ctl status</span><br></pre></td></tr></table></figure><ul><li>安装完成。</li></ul><h4 id="3-2-centos环境"><a href="#3-2-centos环境" class="headerlink" title="3.2 centos环境"></a>3.2 centos环境</h4><ul><li>配置postfix邮箱：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install policycoreutils openssh-server openssh-clients postfix</span><br></pre></td></tr></table></figure><ul><li>安装gitlab：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -i gitlab-ce-9.5.6-ce.0.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><ul><li>修改gitlab配置文件指定服务器ip和自定义端口，修改external_url，命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim  /etc/gitlab/gitlab.rb</span><br></pre></td></tr></table></figure><ul><li>执行命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl reconfigure、gitlab-ctl restart</span><br></pre></td></tr></table></figure><ul><li>安装完成</li></ul><h2 id="4-提醒"><a href="#4-提醒" class="headerlink" title="4.提醒"></a>4.提醒</h2><ol><li>邮箱自动提醒功能有问题</li><li>gitlab会占用8080端口，建议服务器上的tomcat修改下端口号，否则会有问题。</li><li>访问主机ip就可以访问gitlab主页了。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-背景&quot;&gt;&lt;a href=&quot;#1-背景&quot; class=&quot;headerlink&quot; title=&quot;1.背景&quot;&gt;&lt;/a&gt;1.背景&lt;/h2&gt;&lt;p&gt;　　近期公司源代码管理工具从svn转向git，因此要在服务器上部署gitlab，总共部署了两台服务器，一台是Ubuntu server 17.04，一台是Centos7。在部署的过程中遇到不少问题，发现Linux里通过命令直接去Gitlab官网上下载程序根本不能成功，不管是在Ubuntu还是Centos上。后来只能去Gitlab官网手动下载安装包，然后再去Linux里通过命令去执行才能安装。&lt;/p&gt;
&lt;h2 id=&quot;2-软件下载&quot;&gt;&lt;a href=&quot;#2-软件下载&quot; class=&quot;headerlink&quot; title=&quot;2.软件下载&quot;&gt;&lt;/a&gt;2.软件下载&lt;/h2&gt;&lt;h3 id=&quot;2-1-Gitlab官网&quot;&gt;&lt;a href=&quot;#2-1-Gitlab官网&quot; class=&quot;headerlink&quot; title=&quot;2.1 Gitlab官网&quot;&gt;&lt;/a&gt;2.1 Gitlab官网&lt;/h3&gt;&lt;p&gt;　　官网地址：&lt;a href=&quot;https://about.gitlab.com/downloads/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://about.gitlab.com/downloads/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-2-镜像站&quot;&gt;&lt;a href=&quot;#2-2-镜像站&quot; class=&quot;headerlink&quot; title=&quot;2.2 镜像站&quot;&gt;&lt;/a&gt;2.2 镜像站&lt;/h3&gt;&lt;p&gt;　　软件地址：&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu/pool/xenial/main/g/gitlab-ce/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu/pool/xenial/main/g/gitlab-ce/&lt;/a&gt;&lt;br&gt;但是有时候镜像站也会打不开，但是速度肯定要比官网快多了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="GitLab" scheme="http://yoursite.com/tags/GitLab/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装redis</title>
    <link href="http://yoursite.com/2017/10/30/ubuntu%E5%AE%89%E8%A3%85redis/"/>
    <id>http://yoursite.com/2017/10/30/ubuntu%E5%AE%89%E8%A3%85redis/</id>
    <published>2017-10-30T08:36:00.000Z</published>
    <updated>2020-05-19T07:07:31.592Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a>1.背景</h3><p>服务器：ubuntu server 17.04</p><p>安装方式：apt-get</p><h3 id="2-实现"><a href="#2-实现" class="headerlink" title="2.实现"></a>2.实现</h3><ul><li>执行命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get update</span><br></pre></td></tr></table></figure><ul><li>执行命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install redis-server</span><br></pre></td></tr></table></figure><ul><li>启用redis：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-server</span><br></pre></td></tr></table></figure><ul><li>查看redis是否启用：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-cli</span><br></pre></td></tr></table></figure><ul><li><p>redis 127.0.0.1:6379&gt;ping，返回PONG，说明redis已经安装成功。</p></li><li><p>redis默认是只允许本地访问，如果要让其远程访问，还需要修改配置。执行$ vim /etc/redis/redis.conf，注释bind 127.0.0.1，除此之外，还需要关闭保护模式，protected-mode默认是yes，需要将protected-mode设置为 no</p></li><li><p>再重启下redis：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-server</span><br></pre></td></tr></table></figure><h3 id="3-远程访问"><a href="#3-远程访问" class="headerlink" title="3.远程访问"></a>3.远程访问</h3><p>本机环境：win10，安装redis客户端RedisDesktopManager，通过设置ip地址，redis端口号等，可以远程连接ubuntu上安装的redis，如下图所示。</p><p><img src="https://i.loli.net/2020/04/10/fH9FkYbKd6Av7LQ.png" alt="redis.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-背景&quot;&gt;&lt;a href=&quot;#1-背景&quot; class=&quot;headerlink&quot; title=&quot;1.背景&quot;&gt;&lt;/a&gt;1.背景&lt;/h3&gt;&lt;p&gt;服务器：ubuntu server 17.04&lt;/p&gt;
&lt;p&gt;安装方式：apt-get&lt;/p&gt;
&lt;h3 id=&quot;2-实现&quot;&gt;&lt;a href=&quot;#2-实现&quot; class=&quot;headerlink&quot; title=&quot;2.实现&quot;&gt;&lt;/a&gt;2.实现&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;执行命令：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ apt-get update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;ul&gt;
&lt;li&gt;执行命令：&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="ubuntu" scheme="http://yoursite.com/tags/ubuntu/"/>
    
      <category term="redis" scheme="http://yoursite.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu修改apt-get源</title>
    <link href="http://yoursite.com/2017/10/30/ubuntu%E4%BF%AE%E6%94%B9apt-get%E6%BA%90/"/>
    <id>http://yoursite.com/2017/10/30/ubuntu%E4%BF%AE%E6%94%B9apt-get%E6%BA%90/</id>
    <published>2017-10-30T08:11:00.000Z</published>
    <updated>2020-05-19T07:07:31.470Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a>1.背景</h3><p>　　服务器上安装了最新的Ubuntu Server 17.04，代号为zesty。使用apt-get命令安装软件时，有时候速度比较慢，有时候会失败。因此考虑用国内的镜像源更换下apt-get的默认源。</p><h3 id="2-实现"><a href="#2-实现" class="headerlink" title="2.实现"></a>2.实现</h3><ul><li><p>编辑源文件，vim /etc/apt/sources.list</p></li><li><p>使用网易apt-get源，将原来的源地址，替换为如下，由于服务器的版本是17.04，因此源地址的代号部分都是zesty，如果是其他版本，可以替换为对应的版本，具体版本代号可以网上查找。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.163.com/ubuntu/ zesty main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ zesty-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ zesty-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ zesty-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ zesty-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ zesty main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ zesty-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ zesty-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ zesty-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ zesty-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><ul><li><p>执行apt-get update，apt-get upgrade，会发现会报错，apt-get: Could not resolve ‘mirrors.163.com&rsquo;的错误，这种原因其实是因为还缺少一个步骤，就是将添加的网址和IP进行映射，修改/etc/目录下的host文件。</p></li><li><p>通过ip.chinaz.com进行查询网址&ldquo;mirrors.163.com&rdquo;，对应的ip地址如下所示，然后将其添加到hosts文件里。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">123.58.190.228     mirrors.163.com</span><br><span class="line">123.58.190.236     mirrors.163.com</span><br></pre></td></tr></table></figure><ul><li>再执行apt-get update，apt-get upgrade，就配置好了。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-背景&quot;&gt;&lt;a href=&quot;#1-背景&quot; class=&quot;headerlink&quot; title=&quot;1.背景&quot;&gt;&lt;/a&gt;1.背景&lt;/h3&gt;&lt;p&gt;　　服务器上安装了最新的Ubuntu Server 17.04，代号为zesty。使用apt-get命令安装软件时，有时候速度比较慢，有时候会失败。因此考虑用国内的镜像源更换下apt-get的默认源。&lt;/p&gt;
&lt;h3 id=&quot;2-实现&quot;&gt;&lt;a href=&quot;#2-实现&quot; class=&quot;headerlink&quot; title=&quot;2.实现&quot;&gt;&lt;/a&gt;2.实现&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;编辑源文件，vim /etc/apt/sources.list&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用网易apt-get源，将原来的源地址，替换为如下，由于服务器的版本是17.04，因此源地址的代号部分都是zesty，如果是其他版本，可以替换为对应的版本，具体版本代号可以网上查找。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deb http://mirrors.163.com/ubuntu/ zesty main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb http://mirrors.163.com/ubuntu/ zesty-security main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb http://mirrors.163.com/ubuntu/ zesty-updates main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb http://mirrors.163.com/ubuntu/ zesty-proposed main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb http://mirrors.163.com/ubuntu/ zesty-backports main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://mirrors.163.com/ubuntu/ zesty main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://mirrors.163.com/ubuntu/ zesty-security main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://mirrors.163.com/ubuntu/ zesty-updates main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://mirrors.163.com/ubuntu/ zesty-proposed main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src http://mirrors.163.com/ubuntu/ zesty-backports main restricted universe multiverse&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;执行apt-get update，apt-get upgrade，会发现会报错，apt-get: Could not resolve ‘mirrors.163.com&amp;rsquo;的错误，这种原因其实是因为还缺少一个步骤，就是将添加的网址和IP进行映射，修改/etc/目录下的host文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过ip.chinaz.com进行查询网址&amp;ldquo;mirrors.163.com&amp;rdquo;，对应的ip地址如下所示，然后将其添加到hosts文件里。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;123.58.190.228     mirrors.163.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123.58.190.236     mirrors.163.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="apt-get" scheme="http://yoursite.com/tags/apt-get/"/>
    
      <category term="ubuntu" scheme="http://yoursite.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Linux的常用命令</title>
    <link href="http://yoursite.com/2017/10/27/Linux%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/10/27/Linux%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2017-10-27T10:00:00.000Z</published>
    <updated>2020-05-19T07:07:31.210Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-常用指令"><a href="#1-常用指令" class="headerlink" title="1.常用指令"></a>1.常用指令</h3><p>（1）切换用户： su 用户名</p><p>（2）默认切换到root用户： su</p><p>（3）回到根目录：cd /</p><p>（4）进入某个目录：cd /usr/</p><p>（5）回到上级目录：cd ..</p><p>（6）自动补齐目录文件名 Tab键</p><p>（7）查看某个程序的进程号： ps -ef | grep tomcat</p><p>（8）根据进程查看端口号：netstat -naop | grep 2020</p><p>（9）根据端口号查看进程：lsof -i:8088</p><p>（10）显示文件或目录： ls</p><p>（11）列出文件或目录详细信息： ll</p><p>（12）创建目录： mkdir</p><p>（13）创建空文件：touch</p><p>（14）查看文件内容：cat</p><p>（15）拷贝：cp</p><p>（16）移动或重命名：mv</p><p>（17）删除：rm</p><p>（18）递归删除：rm -r &nbsp;</p><p>（19）强制删除：rm -f</p><p>（20）在文件里搜索：find&nbsp;</p><p>（21）统计文本中行数、字数、字符数：wc</p><p>（22）在文本文件中查找某个字符串：grep</p><p>（23）显示当前目录：pwd</p><p>（24）从windows拷贝文件到Linux：rz</p><p>（25）查看所有运行的程序 ps -ef</p><p>（26）编辑文件 vim</p><p>（27）用于字符串的输出 echo $CLASSPATH</p><p>（28）pwdx pid用来查看正在运行的线程所在的目录</p><p>（29）pwd 查看当前目录</p><p>（30）ldconfig&nbsp;搜寻目录/lib和/usr/lib以及动态库配置文件/etc/ld.so.conf内所列的目录下的共享动态链接库</p><p>（31）从Linux拷贝文件到windows：sz</p><p>（32）查看防火墙开启状态&nbsp;firewall-cmd –state</p><p>（33）查看文件的MD5值 md5sum</p><p>（34）查找文件&nbsp;find / -name <em>文件名</em></p><p>（35）返回到上次的目录，类似windows返回 &nbsp;cd -</p><p>（36）回到用户主目录 cd ~ 或者cd</p><p>&nbsp; (37) 查看服务器存储情况&nbsp; df -h</p><p>（38）查看cpu信息&nbsp; cat /proc/cpuinfo</p><p>（39）查看内存信息 cat /proc/meminfo</p><p>（40）查看剩余内存&nbsp; free</p><p>&nbsp; (41)&nbsp; 查看上一次重启、关机记录 last | grep reboot，last | grep shutdown</p><p>（42）查看历史操作记录&nbsp; history 、history 10</p><p>（43）查找文件&nbsp; find / -name test.txt</p><p>&nbsp; (44)&nbsp; 查找文件通配符&nbsp; find /project -name ‘<em>test.txt</em>‘</p><h3 id="2-系统管理命令"><a href="#2-系统管理命令" class="headerlink" title="2.系统管理命令"></a>2.系统管理命令</h3><p>（1）显示指定文件的详细信息，比ls更详细：stat /etc</p><p>（2）显示在线登陆用户：who</p><p>（3）显示当前操作用户：whoami</p><p>（4）显示主机名：hostname</p><p>（5）显示系统信息：uname</p><p>（6）动态显示当前耗费资源最多进程信息：top</p><p>（7）显示瞬间进程状态 ：ps -aux</p><p>（8）查看磁盘大小：df</p><p>（9）查看网络情况： ifconfig</p><p>（10）测试网络连通：ping</p><p>（11）&nbsp;显示网络状态信息：netstatus</p><p>（12）清屏：clear</p><p>（13）杀死进程：kill&nbsp;</p><p>（14）强杀进程：kill -9</p><p>（15）终止程序 ：Ctrl+C</p><p>（16）挂起程序 ：Ctrl+V</p><p>（17）查看某个进程的内存情况：top -p pid</p><h3 id="3-关机重启系统"><a href="#3-关机重启系统" class="headerlink" title="3.关机重启系统"></a>3.关机重启系统</h3><p>（1）关机重启：shutdown -r</p><p>（2）关机不重启： shutdown -h</p><p>（3）立刻关机： shutdown now</p><p>（4）关机： halt</p><p>（5）重启： reboot</p><h3 id="4-Vim工具"><a href="#4-Vim工具" class="headerlink" title="4.Vim工具"></a>4.Vim工具</h3><p>（1）退出：q</p><p>（2）强制退出：q!</p><p>（3）保存并退出：wq</p><p>（4）切换命令模式与插入模式：ESC，i，o</p><p>（5）删除一行：dd</p><p>（6）到文件开头： gg</p><p>（7）到文件结尾： shift+g</p><h3 id="5-压缩工具"><a href="#5-压缩工具" class="headerlink" title="5.压缩工具"></a>5.压缩工具</h3><p>（1）tar.gz 和 .tgz &nbsp;</p><p>&nbsp; 解压：tar zxvf FileName.tar.gz &nbsp;</p><p>&nbsp; 压缩：tar zcvf FileName.tar.gz DirName</p><p>（2）zip</p><p>&nbsp;解压：unzip FileName.zip</p><p>&nbsp;压缩：zip FileName.zip DirName</p><p>（3）rar</p><p>&nbsp;解压：rar x FileName.rar</p><p>&nbsp;压缩：rar a FileName.rar DirName</p><p>（4）tar<br>&nbsp;解包：tar xvf FileName.tar</p><p>&nbsp;打包：tar cvf FileName.tar DirName</p><p>（5）gz</p><p>&nbsp;解压：gzip -d FileName.gz</p><p>&nbsp;压缩：gzip FileName</p><p>&nbsp;</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-常用指令&quot;&gt;&lt;a href=&quot;#1-常用指令&quot; class=&quot;headerlink&quot; title=&quot;1.常用指令&quot;&gt;&lt;/a&gt;1.常用指令&lt;/h3&gt;&lt;p&gt;（1）切换用户： su 用户名&lt;/p&gt;
&lt;p&gt;（2）默认切换到root用户： su&lt;/p&gt;
&lt;p&gt;（3）回到根目录：cd /&lt;/p&gt;
&lt;p&gt;（4）进入某个目录：cd /usr/&lt;/p&gt;
&lt;p&gt;（5）回到上级目录：cd ..&lt;/p&gt;
&lt;p&gt;（6）自动补齐目录文件名 Tab键&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
</feed>
